{"version":3,"file":"ShorelinePage-CeJ9IkbK.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/DocumentIcon.js","../../node_modules/but-unzip/index.browser.min.mjs","../../node_modules/shpjs/lib/unzip.js","../../node_modules/shpjs/lib/combine.js","../../node_modules/shpjs/lib/binaryajax.js","../../node_modules/shpjs/lib/parseShp.js","../../node_modules/parsedbf/decoder.js","../../node_modules/parsedbf/index.js","../../node_modules/shpjs/lib/index.js","../../src/services/shapefileProcessor.ts","../../src/pages/ShorelinePage.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction DocumentIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(DocumentIcon);\nexport default ForwardRef;","var d,g=()=>new DecompressionStream(\"deflate-raw\");try{g(),d=async t=>{let s=g(),e=s.writable.getWriter(),f=s.readable.getReader(),a,i=[],r=0,l=0,o;for(e.write(t),e.close();!(o=await f.read()).done;)a=o.value,i.push(a),r+=a.length;return!i[1]&&a||(a=new Uint8Array(r),i.map(n=>(a.set(n,l),l+=n.length))),a}}catch{}var U=new TextDecoder,u=t=>{throw new Error(\"but-unzip~\"+t)},h=t=>U.decode(t),z=(...t)=>[...m(...t)];function*m(t,s=d){let e=t.length-20,f=Math.max(e-65516,2);for(;(e=t.lastIndexOf(80,e-1))!==-1&&!(t[e+1]===75&&t[e+2]===5&&t[e+3]===6)&&e>f;);e===-1&&u(2);let a=(n,w)=>t.subarray(e+=n,e+=w),i=new DataView(t.buffer,t.byteOffset),r=n=>i.getUint16(n+e,!0),l=n=>i.getUint32(n+e,!0),o=r(10);for(o!==r(8)&&u(3),e=l(16);o--;){let n=r(10),w=r(30),b=r(32),p=l(20),y=l(42),x=h(a(46,r(28))),D=h(a(w,b)),v=e,c;e=y,c=a(30+r(26)+r(28),p),yield{filename:x,comment:D,read:()=>n&8?s(c):n?u(1):c},e=v}}export{d as inflateRaw,m as iter,z as unzip};\n","import { iter } from 'but-unzip';\n\nconst regex = /.+\\.(shp|dbf|json|prj|cpg)$/i;\nexport default async (buffer) => {\n  const files = {};\n  const proms = [];\n  for (const entry of iter(buffer)) {\n    if (!regex.test(entry.filename)) {\n      continue;\n    }\n    proms.push(Promise.resolve(entry.read()).then(bytes => files[entry.filename] = bytes));\n  }\n  await Promise.all(proms);\n  const out = {};\n  const decoder = new TextDecoder();\n  for (const [key, value] of Object.entries(files)) {\n    if (key.slice(-3).toLowerCase() === 'shp' || key.slice(-3).toLowerCase() === 'dbf') {\n      out[key] = new DataView(value.buffer, value.byteOffset, value.byteLength)\n    } else {\n      out[key] = decoder.decode(value);\n    }\n  }\n  return out;\n};\n","const URL = globalThis.URL;\n\nexport default (base, type) => {\n  if (!type) {\n    return base;\n  }\n  const url = new URL(base);\n  url.pathname = `${url.pathname}.${type}`;\n  return url.href;\n};\n","import combine from './combine.js';\n\nexport default async function binaryAjax(_url, type) {\n\n  const url = combine(_url, type);\n  const isOptionalTxt = type === 'prj' || type === 'cpg';\n  try {\n    const resp = await fetch(url);\n    if (resp.status > 399) {\n      throw new Error(resp.statusText);\n    }\n    if (isOptionalTxt) {\n      return resp.text();\n    }\n    const parsed = await resp.arrayBuffer();\n    return new DataView(parsed)\n  } catch (e) {\n    if (isOptionalTxt || type === 'dbf') {\n      return false;\n    }\n    throw e;\n  }\n};\n","\n\nfunction isClockWise(array) {\n  let sum = 0;\n  let i = 1;\n  const len = array.length;\n  let prev, cur;\n  const bbox = [array[0][0], array[0][1], array[0][0], array[0][1]];\n  while (i < len) {\n    prev = cur || array[0];\n    cur = array[i];\n    sum += ((cur[0] - prev[0]) * (cur[1] + prev[1]));\n    i++;\n    if (cur[0] < bbox[0]) {\n      bbox[0] = cur[0];\n    }\n    if (cur[1] < bbox[1]) {\n      bbox[1] = cur[1];\n    }\n    if (cur[0] > bbox[2]) {\n      bbox[2] = cur[0];\n    }\n    if (cur[1] > bbox[3]) {\n      bbox[3] = cur[1];\n    }\n  }\n  return {\n    ring: array,\n    clockWise: sum > 0,\n    bbox,\n    children: []\n  }\n\n}\n\nfunction contains(outer, inner) {\n  if (outer.bbox[0] > inner.bbox[0]) {\n    return false;\n  }\n  if (outer.bbox[1] > inner.bbox[1]) {\n    return false;\n  }\n  if (outer.bbox[2] < inner.bbox[2]) {\n    return false;\n  }\n  if (outer.bbox[3] < inner.bbox[3]) {\n    return false;\n  }\n  return true;\n}\n\nfunction handleRings(rings) {\n  const outers = [];\n  const inners = [];\n  for (const ring of rings) {\n    const proccessed = isClockWise(ring);\n    if (proccessed.clockWise) {\n      outers.push(proccessed)\n    } else {\n      inners.push(proccessed)\n    }\n  }\n  // this is an optimization, \n  // but it would also put in weird bad rings that would otherwise get left out\n  // if (outers.length === 1) {\n  //   const out = [outers[0].ring]\n  //   for (const inner of inners) {\n  //     out.push(inner.ring);\n\n  //   }\n  //   return [out];\n  // }\n  for (const inner of inners) {\n    for (const outer of outers) {\n      if (contains(outer, inner)) {\n        outer.children.push(inner.ring);\n        break;\n      }\n    }\n  }\n  const out = [];\n  for (const outer of outers) {\n    out.push([outer.ring].concat(outer.children));\n  }\n  return out;\n}\nfunction polyReduce(a, b) {\n  if (isClockWise(b) || !a.length) {\n    a.push([b]);\n  } else {\n    a[a.length - 1].push(b);\n  }\n  return a;\n}\nParseShp.prototype.parsePoint = function (data) {\n  return {\n    type: 'Point',\n    coordinates: this.parseCoord(data, 0)\n  };\n};\nParseShp.prototype.parseZPoint = function (data) {\n  const pointXY = this.parsePoint(data);\n  pointXY.coordinates.push(data.getFloat64(16, true));\n  return pointXY;\n};\nParseShp.prototype.parsePointArray = function (data, offset, num) {\n  const out = [];\n  let done = 0;\n  while (done < num) {\n    out.push(this.parseCoord(data, offset));\n    offset += 16;\n    done++;\n  }\n  return out;\n};\nParseShp.prototype.parseZPointArray = function (data, zOffset, num, coordinates) {\n  let i = 0;\n  while (i < num) {\n    coordinates[i].push(data.getFloat64(zOffset, true));\n    i++;\n    zOffset += 8;\n  }\n  return coordinates;\n};\nParseShp.prototype.parseArrayGroup = function (data, offset, partOffset, num, tot) {\n  const out = [];\n  let done = 0;\n  let curNum; let nextNum = 0;\n  let pointNumber;\n  while (done < num) {\n    done++;\n    partOffset += 4;\n    curNum = nextNum;\n    if (done === num) {\n      nextNum = tot;\n    } else {\n      nextNum = data.getInt32(partOffset, true);\n    }\n    pointNumber = nextNum - curNum;\n    if (!pointNumber) {\n      continue;\n    }\n    out.push(this.parsePointArray(data, offset, pointNumber));\n    offset += (pointNumber << 4);\n  }\n  return out;\n};\nParseShp.prototype.parseZArrayGroup = function (data, zOffset, num, coordinates) {\n  let i = 0;\n  while (i < num) {\n    coordinates[i] = this.parseZPointArray(data, zOffset, coordinates[i].length, coordinates[i]);\n    zOffset += (coordinates[i].length << 3);\n    i++;\n  }\n  return coordinates;\n};\nParseShp.prototype.parseMultiPoint = function (data) {\n  const out = {};\n  const num = data.getInt32(32, true);\n  if (!num) {\n    return null;\n  }\n  const mins = this.parseCoord(data, 0);\n  const maxs = this.parseCoord(data, 16);\n  out.bbox = [\n    mins[0],\n    mins[1],\n    maxs[0],\n    maxs[1]\n  ];\n  const offset = 36;\n  if (num === 1) {\n    out.type = 'Point';\n    out.coordinates = this.parseCoord(data, offset);\n  } else {\n    out.type = 'MultiPoint';\n    out.coordinates = this.parsePointArray(data, offset, num);\n  }\n  return out;\n};\nParseShp.prototype.parseZMultiPoint = function (data) {\n  const geoJson = this.parseMultiPoint(data);\n  if (!geoJson) {\n    return null;\n  }\n  let num;\n  if (geoJson.type === 'Point') {\n    geoJson.coordinates.push(data.getFloat64(72, true));\n    return geoJson;\n  } else {\n    num = geoJson.coordinates.length;\n  }\n  const zOffset = 52 + (num << 4);\n  geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n  return geoJson;\n};\nParseShp.prototype.parsePolyline = function (data) {\n  const out = {};\n  const numParts = data.getInt32(32, true);\n  if (!numParts) {\n    return null;\n  }\n  const mins = this.parseCoord(data, 0);\n  const maxs = this.parseCoord(data, 16);\n  out.bbox = [\n    mins[0],\n    mins[1],\n    maxs[0],\n    maxs[1]\n  ];\n  const num = data.getInt32(36, true);\n  let offset, partOffset;\n  if (numParts === 1) {\n    out.type = 'LineString';\n    offset = 44;\n    out.coordinates = this.parsePointArray(data, offset, num);\n  } else {\n    out.type = 'MultiLineString';\n    offset = 40 + (numParts << 2);\n    partOffset = 40;\n    out.coordinates = this.parseArrayGroup(data, offset, partOffset, numParts, num);\n  }\n  return out;\n};\nParseShp.prototype.parseZPolyline = function (data) {\n  const geoJson = this.parsePolyline(data);\n  if (!geoJson) {\n    return null;\n  }\n  const num = geoJson.coordinates.length;\n  let zOffset;\n  if (geoJson.type === 'LineString') {\n    zOffset = 60 + (num << 4);\n    geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n    return geoJson;\n  } else {\n    const totalPoints = geoJson.coordinates.reduce(function (a, v) {\n      return a + v.length;\n    }, 0);\n    zOffset = 56 + (totalPoints << 4) + (num << 2);\n    geoJson.coordinates = this.parseZArrayGroup(data, zOffset, num, geoJson.coordinates);\n    return geoJson;\n  }\n};\nParseShp.prototype.polyFuncs = function (out) {\n  if (!out) {\n    return out;\n  }\n  if (out.type === 'LineString') {\n    out.type = 'Polygon';\n    out.coordinates = [out.coordinates];\n    return out;\n  } else {\n    out.coordinates = handleRings(out.coordinates)\n    if (out.coordinates.length === 1) {\n      out.type = 'Polygon';\n      out.coordinates = out.coordinates[0];\n      return out;\n    } else {\n      out.type = 'MultiPolygon';\n      return out;\n    }\n  }\n};\nParseShp.prototype.parsePolygon = function (data) {\n  return this.polyFuncs(this.parsePolyline(data));\n};\nParseShp.prototype.parseZPolygon = function (data) {\n  return this.polyFuncs(this.parseZPolyline(data));\n};\nconst shpFuncObj = {\n  1: 'parsePoint',\n  3: 'parsePolyline',\n  5: 'parsePolygon',\n  8: 'parseMultiPoint',\n  11: 'parseZPoint',\n  13: 'parseZPolyline',\n  15: 'parseZPolygon',\n  18: 'parseZMultiPoint'\n};\n\nfunction makeParseCoord(trans) {\n  if (trans) {\n    return function (data, offset) {\n      const args = [data.getFloat64(offset, true), data.getFloat64(offset + 8, true)];\n      return trans.inverse(args);\n    };\n  } else {\n    return function (data, offset) {\n      return [data.getFloat64(offset, true), data.getFloat64(offset + 8, true)];\n    };\n  }\n}\n\nfunction ParseShp(buffer, trans) {\n  if (!(this instanceof ParseShp)) {\n    return new ParseShp(buffer, trans);\n  }\n  this.buffer = buffer;\n  this.headers = this.parseHeader();\n  this.shpFuncs(trans);\n  this.rows = this.getRows();\n}\nParseShp.prototype.shpFuncs = function (tran) {\n  let num = this.headers.shpCode;\n  if (num > 20) {\n    num -= 20;\n  }\n  if (!(num in shpFuncObj)) {\n    throw new Error(`I don't know shp type \"${num}\"`);\n  }\n  this.parseFunc = this[shpFuncObj[num]];\n  this.parseCoord = makeParseCoord(tran);\n};\nParseShp.prototype.getShpCode = function () {\n  return this.parseHeader().shpCode;\n};\nParseShp.prototype.parseHeader = function () {\n  const view = this.buffer;\n  return {\n    length: view.getInt32(6 << 2) << 1,\n    version: view.getInt32(7 << 2, true),\n    shpCode: view.getInt32(8 << 2, true),\n    bbox: [\n      view.getFloat64(9 << 2, true),\n      view.getFloat64(11 << 2, true),\n      view.getFloat64(13 << 2, true),\n      view.getFloat64(15 << 2, true)\n    ]\n  };\n};\nParseShp.prototype.getRows = function () {\n  let offset = 100;\n  const len = this.buffer.byteLength - 8;\n  const out = [];\n  let current;\n  while (offset <= len) {\n    current = this.getRow(offset);\n    if (!current) {\n      break;\n    }\n    offset += 8;\n    offset += current.len;\n    if (current.type) {\n      out.push(this.parseFunc(current.data));\n    } else {\n      out.push(null);\n    }\n  }\n  return out;\n};\nParseShp.prototype.getRow = function (offset) {\n  const id = this.buffer.getInt32(offset);\n  const len = this.buffer.getInt32(offset + 4) << 1;\n  if (len === 0) {\n    return {\n      id: id,\n      len: len,\n      type: 0\n    };\n  }\n\n  if (offset + len + 8 > this.buffer.byteLength) {\n    return;\n  }\n  return {\n    id: id,\n    len: len,\n    data: new DataView(this.buffer.buffer, this.buffer.byteOffset + offset + 12, len - 4),\n    type: this.buffer.getInt32(offset + 8, true)\n  };\n};\nexport default function (buffer, trans) {\n  return new ParseShp(buffer, trans).rows;\n};\n","var regex = /^(?:ANSI\\s)?(\\d+)$/m;\nexport function createDecoder(encoding, second) {\n  if (!encoding) {\n    return browserDecoder;\n  }\n  try {\n    new TextDecoder(encoding.trim());\n  } catch (e) {\n    var match = regex.exec(encoding);\n    if (match && !second) {\n      return createDecoder('windows-' + match[1], true);\n    } else {\n      encoding = undefined;\n      return browserDecoder;\n    }\n  }\n  return browserDecoder;\n  function browserDecoder(buffer) {\n    var decoder = new TextDecoder(encoding ? encoding : undefined);\n    var out = decoder.decode(buffer, {\n      stream: true\n    }) + decoder.decode();\n    return out.replace(/\\0/g, '').trim();\n  }\n}\n","import { createDecoder } from './decoder.js';\nfunction dbfHeader(data) {\n  var out = {};\n  out.lastUpdated = new Date(data.getUint8(1) + 1900, data.getUint8(2), data.getUint8(3));\n  out.records = data.getUint32(4, true);\n  out.headerLen = data.getUint16(8, true);\n  out.recLen = data.getUint16(10, true);\n  return out;\n}\n\nfunction dbfRowHeader(data, headerLen, decoder) {\n  var out = [];\n  var offset = 32;\n  while (offset < headerLen) {\n    out.push({\n      name: decoder(new Uint8Array(data.buffer.slice(data.byteOffset + offset, data.byteOffset + offset + 11))),\n      dataType: String.fromCharCode(data.getUint8(offset + 11)),\n      len: data.getUint8(offset + 16),\n      decimal: data.getUint8(offset + 17)\n    });\n    if (data.getUint8(offset + 32) === 13) {\n      break;\n    } else {\n      offset += 32;\n    }\n  }\n  return out;\n}\n\nfunction rowFuncs(buffer, offset, len, type, decoder) {\n  const data = new Uint8Array(buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + len));\n\n  var textData = decoder(data);\n  switch (type) {\n    case 'N':\n    case 'F':\n    case 'O':\n      return parseFloat(textData, 10);\n    case 'D':\n      return new Date(textData.slice(0, 4), parseInt(textData.slice(4, 6), 10) - 1, textData.slice(6, 8));\n    case 'L':\n      return textData.toLowerCase() === 'y' || textData.toLowerCase() === 't';\n    default:\n      return textData;\n  }\n}\n\nfunction parseRow(buffer, offset, rowHeaders, decoder) {\n  var out = {};\n  var i = 0;\n  var len = rowHeaders.length;\n  var field;\n  var header;\n  while (i < len) {\n    header = rowHeaders[i];\n    field = rowFuncs(buffer, offset, header.len, header.dataType, decoder);\n    offset += header.len;\n    if (typeof field !== 'undefined') {\n      out[header.name] = field;\n    }\n    i++;\n  }\n  return out;\n}\n\nexport default function (buffer, encoding) {\n  var decoder = createDecoder(encoding);\n  var header = dbfHeader(buffer);\n  var rowHeaders = dbfRowHeader(buffer, header.headerLen - 1, decoder);\n\n  var offset = ((rowHeaders.length + 1) << 5) + 2;\n  var recLen = header.recLen;\n  var records = header.records;\n  var out = [];\n  while (records) {\n    out.push(parseRow(buffer, offset, rowHeaders, decoder));\n    offset += recLen;\n    records--;\n  }\n  return out;\n}\n","import proj4 from 'proj4'\nimport unzip from './unzip.js';\nimport binaryAjax from './binaryajax.js';\nimport parseShp from './parseShp.js';\nimport parseDbf from 'parsedbf';\nconst URL = globalThis.URL;\nconst toUitn8Arr = b => {\n  if (!b) {\n    throw new Error('forgot to pass buffer');\n  }\n  if (isArrayBuffer(b)) {\n    return new Uint8Array(b);\n  }\n  if (isArrayBuffer(b.buffer)) {\n    if (b.BYTES_PER_ELEMENT === 1) {\n      return b;\n    }\n    return new Uint8Array(b.buffer, b.byteOffset, b.byteLength);\n  }\n  throw new Error('invalid buffer like object')\n};\nconst txtDecoder = new TextDecoder();\nconst toString = (possibleString) => {\n  if (!possibleString) {\n    return;\n  }\n  if (typeof possibleString === 'string') {\n    return possibleString;\n  }\n  if (isArrayBuffer(possibleString) || ArrayBuffer.isView(possibleString) || isDataView(possibleString)) {\n    return txtDecoder.decode(possibleString);\n  }\n}\nconst toDataView = b => {\n  if (!b) {\n    throw new Error('forgot to pass buffer');\n  }\n  if (isDataView(b)) {\n    return b;\n  }\n  if (isArrayBuffer(b)) {\n    return new DataView(b);\n  }\n  if (isArrayBuffer(b.buffer)) {\n    return new DataView(b.buffer, b.byteOffset, b.byteLength);\n  }\n  throw new Error('invalid buffer like object')\n};\n\nfunction isArrayBuffer(subject) {\n  return subject instanceof globalThis.ArrayBuffer || Object.prototype.toString.call(subject) === '[object ArrayBuffer]';\n}\nfunction isDataView(subject) {\n  return subject instanceof globalThis.DataView || Object.prototype.toString.call(subject) === '[object DataView]'\n}\n\nexport const combine = function ([shp, dbf]) {\n  const out = {};\n  out.type = 'FeatureCollection';\n  out.features = [];\n  let i = 0;\n  const len = shp.length;\n  if (!dbf) {\n    dbf = [];\n  }\n  while (i < len) {\n    out.features.push({\n      type: 'Feature',\n      geometry: shp[i],\n      properties: dbf[i] || {}\n    });\n    i++;\n  }\n  return out;\n};\nexport const parseZip = async function (buffer, whiteList) {\n  let key;\n  buffer = toUitn8Arr(buffer);\n  const zip = await unzip(buffer);\n  const names = [];\n  whiteList = whiteList || [];\n  for (key in zip) {\n    if (key.indexOf('__MACOSX') !== -1) {\n      continue;\n    }\n    if (key.slice(-4).toLowerCase() === '.shp') {\n      names.push(key.slice(0, -4));\n      zip[key.slice(0, -3) + key.slice(-3).toLowerCase()] = zip[key];\n    } else if (key.slice(-4).toLowerCase() === '.prj') {\n      zip[key.slice(0, -3) + key.slice(-3).toLowerCase()] = proj4(zip[key]);\n    } else if (key.slice(-5).toLowerCase() === '.json' || whiteList.indexOf(key.split('.').pop()) > -1) {\n      names.push(key.slice(0, -3) + key.slice(-3).toLowerCase());\n    } else if (key.slice(-4).toLowerCase() === '.dbf' || key.slice(-4).toLowerCase() === '.cpg') {\n      zip[key.slice(0, -3) + key.slice(-3).toLowerCase()] = zip[key];\n    }\n  }\n  if (!names.length) {\n    throw new Error('no layers founds');\n  }\n  const geojson = names.map(function (name) {\n    let parsed, dbf;\n    const lastDotIdx = name.lastIndexOf('.');\n    if (lastDotIdx > -1 && name.slice(lastDotIdx).indexOf('json') > -1) {\n      parsed = JSON.parse(zip[name]);\n      parsed.fileName = name.slice(0, lastDotIdx);\n    } else if (whiteList.indexOf(name.slice(lastDotIdx + 1)) > -1) {\n      parsed = zip[name];\n      parsed.fileName = name;\n    } else {\n      if (zip[name + '.dbf']) {\n        dbf = parseDbf(zip[name + '.dbf'], zip[name + '.cpg']);\n      }\n      parsed = combine([parseShp(zip[name + '.shp'], zip[name + '.prj']), dbf]);\n      parsed.fileName = name;\n    }\n    return parsed;\n  });\n  if (geojson.length === 1) {\n    return geojson[0];\n  } else {\n    return geojson;\n  }\n};\nasync function getZip(base, whiteList) {\n  const a = await binaryAjax(base);\n  return parseZip(a, whiteList);\n}\nconst handleShp = async (base) => {\n  const args = await Promise.all([\n    binaryAjax(base, 'shp'),\n    binaryAjax(base, 'prj')\n  ]);\n  let prj = false;\n  try {\n    if (args[1]) {\n      prj = proj4(args[1]);\n    }\n  } catch (e) {\n    prj = false;\n  }\n  return parseShp(args[0], prj);\n};\nconst handleDbf = async (base) => {\n  const [dbf, cpg] = await Promise.all([\n    binaryAjax(base, 'dbf'),\n    binaryAjax(base, 'cpg')\n  ]);\n  if (!dbf) {\n    return;\n  }\n  return parseDbf(dbf, cpg);\n};\nconst checkSuffix = (base, suffix) => {\n  const url = new URL(base, globalThis?.document?.location);\n  return url.pathname.slice(-4).toLowerCase() === suffix;\n};\nconst fromObject = ({ shp, dbf, cpg, prj }) => {\n  const things = [\n    _parseShp(shp, prj)\n  ]\n  if (dbf) {\n    things.push(_parseDbf(dbf, cpg));\n  }\n  return combine(things);\n}\nexport const getShapefile = async function (base, whiteList) {\n  if (typeof base !== 'string') {\n    if (isArrayBuffer(base) || ArrayBuffer.isView(base) || isDataView(base)) {\n      return parseZip(base);\n    }\n    if (base.shp) {\n      return fromObject(base);\n    }\n    throw new TypeError('must be a string, some sort of Buffer, or an object with at least a .shp property')\n  }\n  if (checkSuffix(base, '.zip')) {\n    return getZip(base, whiteList);\n  }\n  if (checkSuffix(base, '.shp')) {\n    base = base.slice(0, -4);\n  }\n  const results = await Promise.all([\n    handleShp(base),\n    handleDbf(base)\n  ]);\n  return combine(results);\n};\nconst _parseShp = function (shp, prj) {\n  shp = toDataView(shp);\n  prj = toString(prj);\n  if (typeof prj === 'string') {\n    try {\n      prj = proj4(prj);\n    } catch (e) {\n      prj = false;\n    }\n  }\n  return parseShp(shp, prj);\n};\nconst _parseDbf = function (dbf, cpg) {\n  dbf = toDataView(dbf);\n  cpg = toString(cpg);\n  return parseDbf(dbf, cpg);\n};\nexport default getShapefile;\nexport {\n  _parseDbf as parseDbf,\n  _parseShp as parseShp,\n}","import shp from 'shpjs'\nimport type { FeatureCollection } from 'geojson'\n\nconst MAX_FILE_SIZE = 50 * 1024 * 1024\n\nconst ALLOWED_TYPES = ['application/zip', 'application/x-zip-compressed']\n\n// Interface removed as it was unused\n\nfunction validateFile(file: File): void {\n  if (!file) {\n    throw new Error('No file provided')\n  }\n\n  if (file.size > MAX_FILE_SIZE) {\n    throw new Error(`File size exceeds maximum limit of ${MAX_FILE_SIZE / (1024 * 1024)}MB`)\n  }\n\n  if (!ALLOWED_TYPES.includes(file.type)) {\n    throw new Error('Invalid file type. Please upload a ZIP file containing shapefile components.')\n  }\n}\n\nfunction validateCoordinate(coord: number[]): boolean {\n  if (!Array.isArray(coord) || coord.length < 2) return false\n  const [lon, lat] = coord\n  return typeof lon === 'number' && typeof lat === 'number' &&\n         lon >= -180 && lon <= 180 && lat >= -90 && lat <= 90\n}\n\nfunction validateGeoJSON(geoJSON: FeatureCollection): void {\n  if (!geoJSON || typeof geoJSON !== 'object') {\n    throw new Error('Invalid GeoJSON: not an object')\n  }\n\n  if (geoJSON.type !== 'FeatureCollection') {\n    throw new Error('Invalid GeoJSON: not a FeatureCollection')\n  }\n\n  if (!Array.isArray(geoJSON.features)) {\n    throw new Error('Invalid GeoJSON: features is not an array')\n  }\n\n  if (geoJSON.features.length === 0) {\n    throw new Error('Invalid GeoJSON: no features found')\n  }\n\n  geoJSON.features.forEach((feature, index) => {\n    if (!feature.geometry) {\n      throw new Error(`Invalid feature at index ${index}: no geometry`)\n    }\n\n    if (feature.geometry.type !== 'LineString' && feature.geometry.type !== 'MultiLineString') {\n      throw new Error(`Invalid feature at index ${index}: geometry must be LineString or MultiLineString`)\n    }\n\n    if (feature.geometry.type === 'LineString') {\n      feature.geometry.coordinates.forEach((coord, i) => {\n        if (!validateCoordinate(coord)) {\n          throw new Error(`Invalid coordinate at index ${i} in feature ${index}`)\n        }\n      })\n    } else {\n      feature.geometry.coordinates.forEach((line, lineIndex) => {\n        line.forEach((coord, i) => {\n          if (!validateCoordinate(coord)) {\n            throw new Error(`Invalid coordinate at index ${i} in line ${lineIndex} of feature ${index}`)\n          }\n        })\n      })\n    }\n  })\n}\n\nexport async function processShapefile(file: File): Promise<{ geoJSON: FeatureCollection }> {\n  try {\n    validateFile(file)\n    const arrayBuffer = await file.arrayBuffer()\n    const result = await shp(arrayBuffer)\n    const geoJSON = Array.isArray(result) ? result[0] : result\n    validateGeoJSON(geoJSON)\n    const cleanedGeoJSON = cleanGeoJSON(geoJSON)\n    return { geoJSON: cleanedGeoJSON }\n  } catch (error) {\n    console.error('Error processing shapefile:', error)\n    throw new Error(error instanceof Error ? error.message : 'Failed to process shapefile')\n  }\n}\n\nfunction cleanGeoJSON(geoJSON: FeatureCollection): FeatureCollection {\n  const cleanedFeatures = geoJSON.features.map(feature => ({\n    ...feature,\n    properties: {\n      ...(feature.properties || {}),\n      _id: undefined,\n      id: undefined,\n      ...Object.fromEntries(\n        Object.entries(feature.properties || {}).filter(([key]) =>\n          !key.startsWith('_') && !key.includes('password') && !key.includes('secret')\n        )\n      )\n    }\n  }))\n\n  return {\n    type: 'FeatureCollection',\n    features: cleanedFeatures\n  }\n}\n\nexport function validateShapefileAttributes(\n  geoJSON: FeatureCollection,\n  requiredAttributes: string[]\n): boolean {\n  if (!geoJSON.features.length) return false\n\n  const firstFeature = geoJSON.features[0]\n  return requiredAttributes.every(attr =>\n    firstFeature.properties && attr in firstFeature.properties\n  )\n}","// ---- File: src/pages/ShorelinePage.tsx ----\nimport { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { processShapefile } from '../services/shapefileProcessor';\nimport { indexedDBService } from '../services/indexedDBService';\nimport Map from '../components/maps/Map';\nimport { ErrorAlert } from '../components/common/ErrorAlert';\nimport { ArrowUpTrayIcon, CheckCircleIcon, XCircleIcon, DocumentIcon } from '@heroicons/react/24/outline';\nimport type { FeatureCollection } from 'geojson';\n\nexport default function ShorelinePage() {\n  const navigate = useNavigate();\n  const [geoJSON, setGeoJSON] = useState<FeatureCollection | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null); \n  const [fileName, setFileName] = useState<string | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handleFileProcess = useCallback(async (file: File | null) => {\n    if (!file) return;\n\n    setError(null); \n    setLoading(true);\n    setGeoJSON(null); \n    setFileName(null);\n\n    try {\n      const result = await processShapefile(file);\n      setGeoJSON(result.geoJSON);\n      setFileName(file.name);\n      console.log(\"Shapefile processed successfully.\");\n    } catch (err) {\n      const message = err instanceof Error ? err.message : 'Failed to process shapefile. Ensure it is a valid ZIP containing required .shp, .shx, and .dbf files.';\n      setError(message);\n      console.error('Error processing shapefile:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    handleFileProcess(e.target.files?.[0] ?? null);\n    e.target.value = '';\n  };\n\n  const handleDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      handleFileProcess(e.dataTransfer.files[0]);\n      e.dataTransfer.clearData();\n    }\n  }, [handleFileProcess]);\n\n  const handleDragOver = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(true);\n  }, []);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n  }, []);\n\n  const handleRemoveFile = () => {\n    setGeoJSON(null);\n    setFileName(null);\n    setError(null);\n  }\n\n  const handleContinue = async () => {\n    if (!geoJSON) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const shorelineId = 'current-shoreline'; \n      await indexedDBService.storeShorelineData(shorelineId, geoJSON);\n      console.log(\"Shoreline data stored in IndexedDB.\");\n      navigate('/segmentation');\n    } catch (err) {\n      const message = err instanceof Error ? err.message : 'Failed to save shoreline data. Please try again.';\n      setError(message);\n      console.error('Error storing shoreline data:', err);\n      setLoading(false); \n    }\n  };\n\n  return (\n    <div className=\"max-w-3xl mx-auto py-12 px-4 sm:px-6 lg:px-8\">\n\n      {/* Header */}\n      <div className=\"text-center mb-10\">\n        <h2 className=\"text-3xl font-extrabold text-primary-900 tracking-tight\">\n          1. Upload Shoreline Data\n        </h2>\n        <p className=\"mt-3 text-lg text-gray-600\">\n          Begin by uploading your shoreline data as a zipped Shapefile (.zip).\n        </p>\n      </div>\n\n      {/* Error Display */}\n      <ErrorAlert message={error} onClose={() => setError(null)} />\n\n      {/* File Upload Section */}\n      <div className=\"mt-6 mb-8 bg-white p-8 rounded-lg shadow-md border border-gray-200\">\n        {/* Conditional rendering based on file state */}\n        {!fileName && !loading && (\n          <div\n            onDrop={handleDrop}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            className={`relative block w-full rounded-lg border-2 ${\n              isDragging ? 'border-primary-500 bg-primary-50' : 'border-dashed border-gray-300'\n            } p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition-colors duration-200`}\n          >\n            <input\n              type=\"file\"\n              id=\"shapefile\"\n              accept=\".zip,application/zip,application/x-zip-compressed\" \n              onChange={handleFileChange}\n              className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\n              disabled={loading}\n            />\n            <ArrowUpTrayIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\n            <span className=\"mt-2 block text-sm font-medium text-gray-900\">\n              Drag & drop your zipped shapefile here\n            </span>\n            <span className=\"block text-xs text-gray-500\">\n              or click to browse files\n            </span>\n            <span className=\"mt-4 block text-xs text-gray-500\">\n              Must be a .zip containing .shp, .shx, and .dbf files. Max 50MB.\n            </span>\n          </div>\n        )}\n\n        {loading && (\n          <div className=\"text-center py-12\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-4\"></div>\n            <p className=\"text-sm font-medium text-gray-700\">Processing file...</p>\n            <p className=\"text-xs text-gray-500\">This may take a moment for larger files.</p>\n          </div>\n        )}\n\n        {!loading && fileName && geoJSON && (\n          <div className=\"text-center py-8 px-4 bg-green-50 border border-green-200 rounded-lg\">\n             <CheckCircleIcon className=\"mx-auto h-12 w-12 text-green-500 mb-3\" />\n             <p className=\"text-sm font-medium text-green-800 mb-1\">File processed successfully!</p>\n             <div className=\"flex items-center justify-center text-xs text-gray-600 mb-4\">\n               <DocumentIcon className=\"w-4 h-4 mr-1.5 flex-shrink-0\" />\n               <span className=\"truncate max-w-xs\">{fileName}</span>\n             </div>\n             <button\n               onClick={handleRemoveFile}\n               className=\"inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-indigo-500\"\n             >\n                <XCircleIcon className=\"w-4 h-4 mr-1.5 text-gray-500\" />\n                Remove and Upload New File\n              </button>\n          </div>\n        )}\n\n        {/* Error state after processing (handled by ErrorAlert above, but could add specific context here if needed) */}\n        {/* {!loading && fileName && error && ( ... )} */}\n\n      </div>\n\n      {/* Map Preview Section (Conditional) */}\n      {geoJSON && !loading && (\n        <div className=\"mb-8\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Shoreline Preview</h3>\n          <div className=\"bg-gray-100 rounded-lg shadow-inner border border-gray-200 overflow-hidden h-96\">\n            <Map\n              geoJSON={geoJSON}\n              segments={[]} \n              parameters={[]}\n              selectedParameter={null}\n              selectedSegments={[]}\n              selectionPolygons={[]}\n              onSegmentSelect={() => {}} \n              onSelectionDelete={() => {}}\n              onAreaSelect={() => {}}\n              isEditing={false}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Action Button */}\n      <div className=\"text-center\">\n        <button\n          onClick={handleContinue}\n          disabled={loading || !geoJSON}\n          className=\"inline-flex items-center justify-center bg-primary-600 text-white font-semibold px-8 py-3 text-base rounded-lg shadow-md hover:bg-primary-700 transition duration-300 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n          title={!geoJSON ? \"Upload a shapefile first\" : \"Proceed to segment the shoreline\"}\n        >\n          {loading && !geoJSON ? 'Processing...' : (loading && geoJSON ? 'Saving...' : 'Continue to Segmentation')}\n        </button>\n      </div>\n\n    </div>\n  );\n}"],"names":["React.createElement","React.forwardRef","regex","iter","URL","combine","shp","useState","useCallback","jsxs","jsx","ArrowUpTrayIcon","CheckCircleIcon","DocumentIcon","XCircleIcon"],"mappings":";;;;;;;;;;;;;AACA,SAAS,aAAa;AAAA,EACpB;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,QAAQ;AACT,SAAoBA,2CAAoB,OAAO,OAAO,OAAO;AAAA,IAC3D,OAAO;AAAA,IACP,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,aAAa;AAAA,IACb,KAAK;AAAA,IACL,mBAAmB;AAAA,EACvB,GAAK,KAAK,GAAG,QAAqBA,6BAAAA,cAAoB,SAAS;AAAA,IAC3D,IAAI;AAAA,EACR,GAAK,KAAK,IAAI,MAAmBA,6BAAAA,cAAoB,QAAQ;AAAA,IACzD,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,GAAG;AAAA,EACP,CAAG,CAAC;AACJ;AACA,MAAM,aAA2BC,6BAAAA,WAAiB,YAAY;ACxB9D,IAAI,GAAE,IAAE,MAAI,IAAI,oBAAoB,aAAa;AAAE,IAAG;AAAC,IAAC,GAAG,IAAE,OAAM,MAAG;AAAC,QAAI,IAAE,EAAC,GAAG,IAAE,EAAE,SAAS,UAAS,GAAG,IAAE,EAAE,SAAS,UAAS,GAAG,GAAE,IAAE,CAAA,GAAG,IAAE,GAAE,IAAE,GAAE;AAAE,SAAI,EAAE,MAAM,CAAC,GAAE,EAAE,MAAK,GAAG,EAAE,IAAE,MAAM,EAAE,KAAI,GAAI,OAAM,KAAE,EAAE,OAAM,EAAE,KAAK,CAAC,GAAE,KAAG,EAAE;AAAO,WAAM,CAAC,EAAE,CAAC,KAAG,MAAI,IAAE,IAAI,WAAW,CAAC,GAAE,EAAE,IAAI,QAAI,EAAE,IAAI,GAAE,CAAC,GAAE,KAAG,EAAE,OAAO,IAAG;AAAA,EAAC;AAAC,QAAM;AAAC;AAAI,IAAC,IAAE,IAAI,eAAY,IAAE,OAAG;AAAC,QAAM,IAAI,MAAM,eAAa,CAAC;AAAC,GAAE,IAAE,OAAG,EAAE,OAAO,CAAC;AAAyB,UAAS,EAAE,GAAE,IAAE,GAAE;AAAC,MAAI,IAAE,EAAE,SAAO,IAAG,IAAE,KAAK,IAAI,IAAE,OAAM,CAAC;AAAE,UAAM,IAAE,EAAE,YAAY,IAAG,IAAE,CAAC,OAAK,MAAI,EAAE,EAAE,IAAE,CAAC,MAAI,MAAI,EAAE,IAAE,CAAC,MAAI,KAAG,EAAE,IAAE,CAAC,MAAI,MAAI,IAAE,IAAG;AAAC,QAAI,MAAI,EAAE,CAAC;AAAE,MAAI,IAAE,CAAC,GAAE,MAAI,EAAE,SAAS,KAAG,GAAE,KAAG,CAAC,GAAE,IAAE,IAAI,SAAS,EAAE,QAAO,EAAE,UAAU,GAAE,IAAE,OAAG,EAAE,UAAU,IAAE,GAAE,IAAE,GAAE,IAAE,OAAG,EAAE,UAAU,IAAE,GAAE,IAAE,GAAE,IAAE,EAAE,EAAE;AAAE,OAAI,MAAI,EAAE,CAAC,KAAG,EAAE,CAAC,GAAE,IAAE,EAAE,EAAE,GAAE,OAAK;AAAC,QAAI,IAAE,EAAE,EAAE,GAAE,IAAE,EAAE,EAAE,GAAE,IAAE,EAAE,EAAE,GAAE,IAAE,EAAE,EAAE,GAAE,IAAE,EAAE,EAAE,GAAE,IAAE,EAAE,EAAE,IAAG,EAAE,EAAE,CAAC,CAAC,GAAE,IAAE,EAAE,EAAE,GAAE,CAAC,CAAC,GAAE,IAAE,GAAE;AAAE,QAAE,GAAE,IAAE,EAAE,KAAG,EAAE,EAAE,IAAE,EAAE,EAAE,GAAE,CAAC,GAAE,MAAK,EAAC,UAAS,GAAE,SAAQ,GAAE,MAAK,MAAI,IAAE,IAAE,EAAE,CAAC,IAAE,IAAE,EAAE,CAAC,IAAE,EAAC,GAAE,IAAE;AAAA,EAAC;AAAC;ACEj4B,MAAMC,UAAQ;AACd,MAAA,QAAe,OAAO,WAAW;AAC/B,QAAM,QAAQ,CAAA;AACd,QAAM,QAAQ,CAAA;AACd,aAAW,SAASC,EAAK,MAAM,GAAG;AAChC,QAAI,CAACD,QAAM,KAAK,MAAM,QAAQ,GAAG;AAC/B;AAAA,IACF;AACA,UAAM,KAAK,QAAQ,QAAQ,MAAM,KAAI,CAAE,EAAE,KAAK,WAAS,MAAM,MAAM,QAAQ,IAAI,KAAK,CAAC;AAAA,EACvF;AACA,QAAM,QAAQ,IAAI,KAAK;AACvB,QAAM,MAAM,CAAA;AACZ,QAAM,UAAU,IAAI,YAAW;AAC/B,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,KAAK,GAAG;AAChD,QAAI,IAAI,MAAM,EAAE,EAAE,YAAW,MAAO,SAAS,IAAI,MAAM,EAAE,EAAE,YAAW,MAAO,OAAO;AAClF,UAAI,GAAG,IAAI,IAAI,SAAS,MAAM,QAAQ,MAAM,YAAY,MAAM,UAAU;AAAA,IAC1E,OAAO;AACL,UAAI,GAAG,IAAI,QAAQ,OAAO,KAAK;AAAA,IACjC;AAAA,EACF;AACA,SAAO;AACT;ACvBA,MAAME,QAAM,WAAW;AAEvB,MAAA,YAAe,CAAC,MAAM,SAAS;AAC7B,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,EACT;AACA,QAAM,MAAM,IAAIA,MAAI,IAAI;AACxB,MAAI,WAAW,GAAG,IAAI,QAAQ,IAAI,IAAI;AACtC,SAAO,IAAI;AACb;ACPe,eAAe,WAAW,MAAM,MAAM;AAEnD,QAAM,MAAMC,UAAQ,MAAM,IAAI;AAC9B,QAAM,gBAAgB,SAAS,SAAS,SAAS;AACjD,MAAI;AACF,UAAM,OAAO,MAAM,MAAM,GAAG;AAC5B,QAAI,KAAK,SAAS,KAAK;AACrB,YAAM,IAAI,MAAM,KAAK,UAAU;AAAA,IACjC;AACA,QAAI,eAAe;AACjB,aAAO,KAAK,KAAI;AAAA,IAClB;AACA,UAAM,SAAS,MAAM,KAAK,YAAW;AACrC,WAAO,IAAI,SAAS,MAAM;AAAA,EAC5B,SAAS,GAAG;AACV,QAAI,iBAAiB,SAAS,OAAO;AACnC,aAAO;AAAA,IACT;AACA,UAAM;AAAA,EACR;AACF;ACpBA,SAAS,YAAY,OAAO;AAC1B,MAAI,MAAM;AACV,MAAI,IAAI;AACR,QAAM,MAAM,MAAM;AAClB,MAAI,MAAM;AACV,QAAM,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAChE,SAAO,IAAI,KAAK;AACd,WAAO,OAAO,MAAM,CAAC;AACrB,UAAM,MAAM,CAAC;AACb,YAAS,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,KAAK,CAAC;AAC7C;AACA,QAAI,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG;AACpB,WAAK,CAAC,IAAI,IAAI,CAAC;AAAA,IACjB;AACA,QAAI,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG;AACpB,WAAK,CAAC,IAAI,IAAI,CAAC;AAAA,IACjB;AACA,QAAI,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG;AACpB,WAAK,CAAC,IAAI,IAAI,CAAC;AAAA,IACjB;AACA,QAAI,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG;AACpB,WAAK,CAAC,IAAI,IAAI,CAAC;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,WAAW,MAAM;AAAA,IACjB;AAAA,IACA,UAAU,CAAA;AAAA,EACd;AAEA;AAEA,SAAS,SAAS,OAAO,OAAO;AAC9B,MAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,GAAG;AACjC,WAAO;AAAA,EACT;AACA,MAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,GAAG;AACjC,WAAO;AAAA,EACT;AACA,MAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,GAAG;AACjC,WAAO;AAAA,EACT;AACA,MAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,GAAG;AACjC,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAEA,SAAS,YAAY,OAAO;AAC1B,QAAM,SAAS,CAAA;AACf,QAAM,SAAS,CAAA;AACf,aAAW,QAAQ,OAAO;AACxB,UAAM,aAAa,YAAY,IAAI;AACnC,QAAI,WAAW,WAAW;AACxB,aAAO,KAAK,UAAU;AAAA,IACxB,OAAO;AACL,aAAO,KAAK,UAAU;AAAA,IACxB;AAAA,EACF;AAWA,aAAW,SAAS,QAAQ;AAC1B,eAAW,SAAS,QAAQ;AAC1B,UAAI,SAAS,OAAO,KAAK,GAAG;AAC1B,cAAM,SAAS,KAAK,MAAM,IAAI;AAC9B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,QAAM,MAAM,CAAA;AACZ,aAAW,SAAS,QAAQ;AAC1B,QAAI,KAAK,CAAC,MAAM,IAAI,EAAE,OAAO,MAAM,QAAQ,CAAC;AAAA,EAC9C;AACA,SAAO;AACT;AASA,SAAS,UAAU,aAAa,SAAU,MAAM;AAC9C,SAAO;AAAA,IACL,MAAM;AAAA,IACN,aAAa,KAAK,WAAW,MAAM,CAAC;AAAA,EACxC;AACA;AACA,SAAS,UAAU,cAAc,SAAU,MAAM;AAC/C,QAAM,UAAU,KAAK,WAAW,IAAI;AACpC,UAAQ,YAAY,KAAK,KAAK,WAAW,IAAI,IAAI,CAAC;AAClD,SAAO;AACT;AACA,SAAS,UAAU,kBAAkB,SAAU,MAAM,QAAQ,KAAK;AAChE,QAAM,MAAM,CAAA;AACZ,MAAI,OAAO;AACX,SAAO,OAAO,KAAK;AACjB,QAAI,KAAK,KAAK,WAAW,MAAM,MAAM,CAAC;AACtC,cAAU;AACV;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,UAAU,mBAAmB,SAAU,MAAM,SAAS,KAAK,aAAa;AAC/E,MAAI,IAAI;AACR,SAAO,IAAI,KAAK;AACd,gBAAY,CAAC,EAAE,KAAK,KAAK,WAAW,SAAS,IAAI,CAAC;AAClD;AACA,eAAW;AAAA,EACb;AACA,SAAO;AACT;AACA,SAAS,UAAU,kBAAkB,SAAU,MAAM,QAAQ,YAAY,KAAK,KAAK;AACjF,QAAM,MAAM,CAAA;AACZ,MAAI,OAAO;AACX,MAAI;AAAQ,MAAI,UAAU;AAC1B,MAAI;AACJ,SAAO,OAAO,KAAK;AACjB;AACA,kBAAc;AACd,aAAS;AACT,QAAI,SAAS,KAAK;AAChB,gBAAU;AAAA,IACZ,OAAO;AACL,gBAAU,KAAK,SAAS,YAAY,IAAI;AAAA,IAC1C;AACA,kBAAc,UAAU;AACxB,QAAI,CAAC,aAAa;AAChB;AAAA,IACF;AACA,QAAI,KAAK,KAAK,gBAAgB,MAAM,QAAQ,WAAW,CAAC;AACxD,cAAW,eAAe;AAAA,EAC5B;AACA,SAAO;AACT;AACA,SAAS,UAAU,mBAAmB,SAAU,MAAM,SAAS,KAAK,aAAa;AAC/E,MAAI,IAAI;AACR,SAAO,IAAI,KAAK;AACd,gBAAY,CAAC,IAAI,KAAK,iBAAiB,MAAM,SAAS,YAAY,CAAC,EAAE,QAAQ,YAAY,CAAC,CAAC;AAC3F,eAAY,YAAY,CAAC,EAAE,UAAU;AACrC;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,UAAU,kBAAkB,SAAU,MAAM;AACnD,QAAM,MAAM,CAAA;AACZ,QAAM,MAAM,KAAK,SAAS,IAAI,IAAI;AAClC,MAAI,CAAC,KAAK;AACR,WAAO;AAAA,EACT;AACA,QAAM,OAAO,KAAK,WAAW,MAAM,CAAC;AACpC,QAAM,OAAO,KAAK,WAAW,MAAM,EAAE;AACrC,MAAI,OAAO;AAAA,IACT,KAAK,CAAC;AAAA,IACN,KAAK,CAAC;AAAA,IACN,KAAK,CAAC;AAAA,IACN,KAAK,CAAC;AAAA,EACV;AACE,QAAM,SAAS;AACf,MAAI,QAAQ,GAAG;AACb,QAAI,OAAO;AACX,QAAI,cAAc,KAAK,WAAW,MAAM,MAAM;AAAA,EAChD,OAAO;AACL,QAAI,OAAO;AACX,QAAI,cAAc,KAAK,gBAAgB,MAAM,QAAQ,GAAG;AAAA,EAC1D;AACA,SAAO;AACT;AACA,SAAS,UAAU,mBAAmB,SAAU,MAAM;AACpD,QAAM,UAAU,KAAK,gBAAgB,IAAI;AACzC,MAAI,CAAC,SAAS;AACZ,WAAO;AAAA,EACT;AACA,MAAI;AACJ,MAAI,QAAQ,SAAS,SAAS;AAC5B,YAAQ,YAAY,KAAK,KAAK,WAAW,IAAI,IAAI,CAAC;AAClD,WAAO;AAAA,EACT,OAAO;AACL,UAAM,QAAQ,YAAY;AAAA,EAC5B;AACA,QAAM,UAAU,MAAM,OAAO;AAC7B,UAAQ,cAAc,KAAK,iBAAiB,MAAM,SAAS,KAAK,QAAQ,WAAW;AACnF,SAAO;AACT;AACA,SAAS,UAAU,gBAAgB,SAAU,MAAM;AACjD,QAAM,MAAM,CAAA;AACZ,QAAM,WAAW,KAAK,SAAS,IAAI,IAAI;AACvC,MAAI,CAAC,UAAU;AACb,WAAO;AAAA,EACT;AACA,QAAM,OAAO,KAAK,WAAW,MAAM,CAAC;AACpC,QAAM,OAAO,KAAK,WAAW,MAAM,EAAE;AACrC,MAAI,OAAO;AAAA,IACT,KAAK,CAAC;AAAA,IACN,KAAK,CAAC;AAAA,IACN,KAAK,CAAC;AAAA,IACN,KAAK,CAAC;AAAA,EACV;AACE,QAAM,MAAM,KAAK,SAAS,IAAI,IAAI;AAClC,MAAI,QAAQ;AACZ,MAAI,aAAa,GAAG;AAClB,QAAI,OAAO;AACX,aAAS;AACT,QAAI,cAAc,KAAK,gBAAgB,MAAM,QAAQ,GAAG;AAAA,EAC1D,OAAO;AACL,QAAI,OAAO;AACX,aAAS,MAAM,YAAY;AAC3B,iBAAa;AACb,QAAI,cAAc,KAAK,gBAAgB,MAAM,QAAQ,YAAY,UAAU,GAAG;AAAA,EAChF;AACA,SAAO;AACT;AACA,SAAS,UAAU,iBAAiB,SAAU,MAAM;AAClD,QAAM,UAAU,KAAK,cAAc,IAAI;AACvC,MAAI,CAAC,SAAS;AACZ,WAAO;AAAA,EACT;AACA,QAAM,MAAM,QAAQ,YAAY;AAChC,MAAI;AACJ,MAAI,QAAQ,SAAS,cAAc;AACjC,cAAU,MAAM,OAAO;AACvB,YAAQ,cAAc,KAAK,iBAAiB,MAAM,SAAS,KAAK,QAAQ,WAAW;AACnF,WAAO;AAAA,EACT,OAAO;AACL,UAAM,cAAc,QAAQ,YAAY,OAAO,SAAU,GAAG,GAAG;AAC7D,aAAO,IAAI,EAAE;AAAA,IACf,GAAG,CAAC;AACJ,cAAU,MAAM,eAAe,MAAM,OAAO;AAC5C,YAAQ,cAAc,KAAK,iBAAiB,MAAM,SAAS,KAAK,QAAQ,WAAW;AACnF,WAAO;AAAA,EACT;AACF;AACA,SAAS,UAAU,YAAY,SAAU,KAAK;AAC5C,MAAI,CAAC,KAAK;AACR,WAAO;AAAA,EACT;AACA,MAAI,IAAI,SAAS,cAAc;AAC7B,QAAI,OAAO;AACX,QAAI,cAAc,CAAC,IAAI,WAAW;AAClC,WAAO;AAAA,EACT,OAAO;AACL,QAAI,cAAc,YAAY,IAAI,WAAW;AAC7C,QAAI,IAAI,YAAY,WAAW,GAAG;AAChC,UAAI,OAAO;AACX,UAAI,cAAc,IAAI,YAAY,CAAC;AACnC,aAAO;AAAA,IACT,OAAO;AACL,UAAI,OAAO;AACX,aAAO;AAAA,IACT;AAAA,EACF;AACF;AACA,SAAS,UAAU,eAAe,SAAU,MAAM;AAChD,SAAO,KAAK,UAAU,KAAK,cAAc,IAAI,CAAC;AAChD;AACA,SAAS,UAAU,gBAAgB,SAAU,MAAM;AACjD,SAAO,KAAK,UAAU,KAAK,eAAe,IAAI,CAAC;AACjD;AACA,MAAM,aAAa;AAAA,EACjB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN;AAEA,SAAS,eAAe,OAAO;AAC7B,MAAI,OAAO;AACT,WAAO,SAAU,MAAM,QAAQ;AAC7B,YAAM,OAAO,CAAC,KAAK,WAAW,QAAQ,IAAI,GAAG,KAAK,WAAW,SAAS,GAAG,IAAI,CAAC;AAC9E,aAAO,MAAM,QAAQ,IAAI;AAAA,IAC3B;AAAA,EACF,OAAO;AACL,WAAO,SAAU,MAAM,QAAQ;AAC7B,aAAO,CAAC,KAAK,WAAW,QAAQ,IAAI,GAAG,KAAK,WAAW,SAAS,GAAG,IAAI,CAAC;AAAA,IAC1E;AAAA,EACF;AACF;AAEA,SAAS,SAAS,QAAQ,OAAO;AAC/B,MAAI,EAAE,gBAAgB,WAAW;AAC/B,WAAO,IAAI,SAAS,QAAQ,KAAK;AAAA,EACnC;AACA,OAAK,SAAS;AACd,OAAK,UAAU,KAAK,YAAW;AAC/B,OAAK,SAAS,KAAK;AACnB,OAAK,OAAO,KAAK,QAAO;AAC1B;AACA,SAAS,UAAU,WAAW,SAAU,MAAM;AAC5C,MAAI,MAAM,KAAK,QAAQ;AACvB,MAAI,MAAM,IAAI;AACZ,WAAO;AAAA,EACT;AACA,MAAI,EAAE,OAAO,aAAa;AACxB,UAAM,IAAI,MAAM,0BAA0B,GAAG,GAAG;AAAA,EAClD;AACA,OAAK,YAAY,KAAK,WAAW,GAAG,CAAC;AACrC,OAAK,aAAa,eAAe,IAAI;AACvC;AACA,SAAS,UAAU,aAAa,WAAY;AAC1C,SAAO,KAAK,YAAW,EAAG;AAC5B;AACA,SAAS,UAAU,cAAc,WAAY;AAC3C,QAAM,OAAO,KAAK;AAClB,SAAO;AAAA,IACL,QAAQ,KAAK,SAAS,KAAK,CAAC,KAAK;AAAA,IACjC,SAAS,KAAK,SAAS,KAAK,GAAG,IAAI;AAAA,IACnC,SAAS,KAAK,SAAS,KAAK,GAAG,IAAI;AAAA,IACnC,MAAM;AAAA,MACJ,KAAK,WAAW,KAAK,GAAG,IAAI;AAAA,MAC5B,KAAK,WAAW,MAAM,GAAG,IAAI;AAAA,MAC7B,KAAK,WAAW,MAAM,GAAG,IAAI;AAAA,MAC7B,KAAK,WAAW,MAAM,GAAG,IAAI;AAAA,IACnC;AAAA,EACA;AACA;AACA,SAAS,UAAU,UAAU,WAAY;AACvC,MAAI,SAAS;AACb,QAAM,MAAM,KAAK,OAAO,aAAa;AACrC,QAAM,MAAM,CAAA;AACZ,MAAI;AACJ,SAAO,UAAU,KAAK;AACpB,cAAU,KAAK,OAAO,MAAM;AAC5B,QAAI,CAAC,SAAS;AACZ;AAAA,IACF;AACA,cAAU;AACV,cAAU,QAAQ;AAClB,QAAI,QAAQ,MAAM;AAChB,UAAI,KAAK,KAAK,UAAU,QAAQ,IAAI,CAAC;AAAA,IACvC,OAAO;AACL,UAAI,KAAK,IAAI;AAAA,IACf;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,UAAU,SAAS,SAAU,QAAQ;AAC5C,QAAM,KAAK,KAAK,OAAO,SAAS,MAAM;AACtC,QAAM,MAAM,KAAK,OAAO,SAAS,SAAS,CAAC,KAAK;AAChD,MAAI,QAAQ,GAAG;AACb,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,MAAM;AAAA,IACZ;AAAA,EACE;AAEA,MAAI,SAAS,MAAM,IAAI,KAAK,OAAO,YAAY;AAC7C;AAAA,EACF;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,MAAM,IAAI,SAAS,KAAK,OAAO,QAAQ,KAAK,OAAO,aAAa,SAAS,IAAI,MAAM,CAAC;AAAA,IACpF,MAAM,KAAK,OAAO,SAAS,SAAS,GAAG,IAAI;AAAA,EAC/C;AACA;AACe,SAAA,SAAU,QAAQ,OAAO;AACtC,SAAO,IAAI,SAAS,QAAQ,KAAK,EAAE;AACrC;ACtXA,IAAI,QAAQ;AACL,SAAS,cAAc,UAAU,QAAQ;AAC9C,MAAI,CAAC,UAAU;AACb,WAAO;AAAA,EACT;AACA,MAAI;AACF,QAAI,YAAY,SAAS,MAAM;AAAA,EACjC,SAAS,GAAG;AACV,QAAI,QAAQ,MAAM,KAAK,QAAQ;AAC/B,QAAI,SAAS,CAAC,QAAQ;AACpB,aAAO,cAAc,aAAa,MAAM,CAAC,GAAG,IAAI;AAAA,IAClD,OAAO;AACL,iBAAW;AACX,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACP,WAAS,eAAe,QAAQ;AAC9B,QAAI,UAAU,IAAI,YAAY,WAAW,WAAW,MAAS;AAC7D,QAAI,MAAM,QAAQ,OAAO,QAAQ;AAAA,MAC/B,QAAQ;AAAA,IACd,CAAK,IAAI,QAAQ,OAAM;AACnB,WAAO,IAAI,QAAQ,OAAO,EAAE,EAAE,KAAI;AAAA,EACpC;AACF;ACvBA,SAAS,UAAU,MAAM;AACvB,MAAI,MAAM,CAAA;AACV,MAAI,cAAc,IAAI,KAAK,KAAK,SAAS,CAAC,IAAI,MAAM,KAAK,SAAS,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC;AACtF,MAAI,UAAU,KAAK,UAAU,GAAG,IAAI;AACpC,MAAI,YAAY,KAAK,UAAU,GAAG,IAAI;AACtC,MAAI,SAAS,KAAK,UAAU,IAAI,IAAI;AACpC,SAAO;AACT;AAEA,SAAS,aAAa,MAAM,WAAW,SAAS;AAC9C,MAAI,MAAM,CAAA;AACV,MAAI,SAAS;AACb,SAAO,SAAS,WAAW;AACzB,QAAI,KAAK;AAAA,MACP,MAAM,QAAQ,IAAI,WAAW,KAAK,OAAO,MAAM,KAAK,aAAa,QAAQ,KAAK,aAAa,SAAS,EAAE,CAAC,CAAC;AAAA,MACxG,UAAU,OAAO,aAAa,KAAK,SAAS,SAAS,EAAE,CAAC;AAAA,MACxD,KAAK,KAAK,SAAS,SAAS,EAAE;AAAA,MAC9B,SAAS,KAAK,SAAS,SAAS,EAAE;AAAA,IACxC,CAAK;AACD,QAAI,KAAK,SAAS,SAAS,EAAE,MAAM,IAAI;AACrC;AAAA,IACF,OAAO;AACL,gBAAU;AAAA,IACZ;AAAA,EACF;AACA,SAAO;AACT;AAEA,SAAS,SAAS,QAAQ,QAAQ,KAAK,MAAM,SAAS;AACpD,QAAM,OAAO,IAAI,WAAW,OAAO,OAAO,MAAM,OAAO,aAAa,QAAQ,OAAO,aAAa,SAAS,GAAG,CAAC;AAE7G,MAAI,WAAW,QAAQ,IAAI;AAC3B,UAAQ,MAAI;AAAA,IACV,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,aAAO,WAAW,UAAU,EAAE;AAAA,IAChC,KAAK;AACH,aAAO,IAAI,KAAK,SAAS,MAAM,GAAG,CAAC,GAAG,SAAS,SAAS,MAAM,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,SAAS,MAAM,GAAG,CAAC,CAAC;AAAA,IACpG,KAAK;AACH,aAAO,SAAS,YAAW,MAAO,OAAO,SAAS,YAAW,MAAO;AAAA,IACtE;AACE,aAAO;AAAA,EACb;AACA;AAEA,SAAS,SAAS,QAAQ,QAAQ,YAAY,SAAS;AACrD,MAAI,MAAM,CAAA;AACV,MAAI,IAAI;AACR,MAAI,MAAM,WAAW;AACrB,MAAI;AACJ,MAAI;AACJ,SAAO,IAAI,KAAK;AACd,aAAS,WAAW,CAAC;AACrB,YAAQ,SAAS,QAAQ,QAAQ,OAAO,KAAK,OAAO,UAAU,OAAO;AACrE,cAAU,OAAO;AACjB,QAAI,OAAO,UAAU,aAAa;AAChC,UAAI,OAAO,IAAI,IAAI;AAAA,IACrB;AACA;AAAA,EACF;AACA,SAAO;AACT;AAEe,SAAA,SAAU,QAAQ,UAAU;AACzC,MAAI,UAAU,cAAc,QAAQ;AACpC,MAAI,SAAS,UAAU,MAAM;AAC7B,MAAI,aAAa,aAAa,QAAQ,OAAO,YAAY,GAAG,OAAO;AAEnE,MAAI,UAAW,WAAW,SAAS,KAAM,KAAK;AAC9C,MAAI,SAAS,OAAO;AACpB,MAAI,UAAU,OAAO;AACrB,MAAI,MAAM,CAAA;AACV,SAAO,SAAS;AACd,QAAI,KAAK,SAAS,QAAQ,QAAQ,YAAY,OAAO,CAAC;AACtD,cAAU;AACV;AAAA,EACF;AACA,SAAO;AACT;AC3EA,MAAM,MAAM,WAAW;AACvB,MAAM,aAAa,OAAK;AACtB,MAAI,CAAC,GAAG;AACN,UAAM,IAAI,MAAM,uBAAuB;AAAA,EACzC;AACA,MAAI,cAAc,CAAC,GAAG;AACpB,WAAO,IAAI,WAAW,CAAC;AAAA,EACzB;AACA,MAAI,cAAc,EAAE,MAAM,GAAG;AAC3B,QAAI,EAAE,sBAAsB,GAAG;AAC7B,aAAO;AAAA,IACT;AACA,WAAO,IAAI,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU;AAAA,EAC5D;AACA,QAAM,IAAI,MAAM,4BAA4B;AAC9C;AACA,MAAM,aAAa,IAAI,YAAW;AAClC,MAAM,WAAW,CAAC,mBAAmB;AACnC,MAAI,CAAC,gBAAgB;AACnB;AAAA,EACF;AACA,MAAI,OAAO,mBAAmB,UAAU;AACtC,WAAO;AAAA,EACT;AACA,MAAI,cAAc,cAAc,KAAK,YAAY,OAAO,cAAc,KAAK,WAAW,cAAc,GAAG;AACrG,WAAO,WAAW,OAAO,cAAc;AAAA,EACzC;AACF;AACA,MAAM,aAAa,OAAK;AACtB,MAAI,CAAC,GAAG;AACN,UAAM,IAAI,MAAM,uBAAuB;AAAA,EACzC;AACA,MAAI,WAAW,CAAC,GAAG;AACjB,WAAO;AAAA,EACT;AACA,MAAI,cAAc,CAAC,GAAG;AACpB,WAAO,IAAI,SAAS,CAAC;AAAA,EACvB;AACA,MAAI,cAAc,EAAE,MAAM,GAAG;AAC3B,WAAO,IAAI,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU;AAAA,EAC1D;AACA,QAAM,IAAI,MAAM,4BAA4B;AAC9C;AAEA,SAAS,cAAc,SAAS;AAC9B,SAAO,mBAAmB,WAAW,eAAe,OAAO,UAAU,SAAS,KAAK,OAAO,MAAM;AAClG;AACA,SAAS,WAAW,SAAS;AAC3B,SAAO,mBAAmB,WAAW,YAAY,OAAO,UAAU,SAAS,KAAK,OAAO,MAAM;AAC/F;AAEO,MAAM,UAAU,SAAU,CAAC,KAAK,GAAG,GAAG;AAC3C,QAAM,MAAM,CAAA;AACZ,MAAI,OAAO;AACX,MAAI,WAAW,CAAA;AACf,MAAI,IAAI;AACR,QAAM,MAAM,IAAI;AAChB,MAAI,CAAC,KAAK;AACR,UAAM,CAAA;AAAA,EACR;AACA,SAAO,IAAI,KAAK;AACd,QAAI,SAAS,KAAK;AAAA,MAChB,MAAM;AAAA,MACN,UAAU,IAAI,CAAC;AAAA,MACf,YAAY,IAAI,CAAC,KAAK,CAAA;AAAA,IAC5B,CAAK;AACD;AAAA,EACF;AACA,SAAO;AACT;AACO,MAAM,WAAW,eAAgB,QAAQ,WAAW;AACzD,MAAI;AACJ,WAAS,WAAW,MAAM;AAC1B,QAAM,MAAM,MAAM,MAAM,MAAM;AAC9B,QAAM,QAAQ,CAAA;AACd,cAAY,aAAa,CAAA;AACzB,OAAK,OAAO,KAAK;AACf,QAAI,IAAI,QAAQ,UAAU,MAAM,IAAI;AAClC;AAAA,IACF;AACA,QAAI,IAAI,MAAM,EAAE,EAAE,YAAW,MAAO,QAAQ;AAC1C,YAAM,KAAK,IAAI,MAAM,GAAG,EAAE,CAAC;AAC3B,UAAI,IAAI,MAAM,GAAG,EAAE,IAAI,IAAI,MAAM,EAAE,EAAE,YAAW,CAAE,IAAI,IAAI,GAAG;AAAA,IAC/D,WAAW,IAAI,MAAM,EAAE,EAAE,YAAW,MAAO,QAAQ;AACjD,UAAI,IAAI,MAAM,GAAG,EAAE,IAAI,IAAI,MAAM,EAAE,EAAE,YAAW,CAAE,IAAI,MAAM,IAAI,GAAG,CAAC;AAAA,IACtE,WAAW,IAAI,MAAM,EAAE,EAAE,YAAW,MAAO,WAAW,UAAU,QAAQ,IAAI,MAAM,GAAG,EAAE,IAAG,CAAE,IAAI,IAAI;AAClG,YAAM,KAAK,IAAI,MAAM,GAAG,EAAE,IAAI,IAAI,MAAM,EAAE,EAAE,YAAW,CAAE;AAAA,IAC3D,WAAW,IAAI,MAAM,EAAE,EAAE,YAAW,MAAO,UAAU,IAAI,MAAM,EAAE,EAAE,YAAW,MAAO,QAAQ;AAC3F,UAAI,IAAI,MAAM,GAAG,EAAE,IAAI,IAAI,MAAM,EAAE,EAAE,YAAW,CAAE,IAAI,IAAI,GAAG;AAAA,IAC/D;AAAA,EACF;AACA,MAAI,CAAC,MAAM,QAAQ;AACjB,UAAM,IAAI,MAAM,kBAAkB;AAAA,EACpC;AACA,QAAM,UAAU,MAAM,IAAI,SAAU,MAAM;AACxC,QAAI,QAAQ;AACZ,UAAM,aAAa,KAAK,YAAY,GAAG;AACvC,QAAI,aAAa,MAAM,KAAK,MAAM,UAAU,EAAE,QAAQ,MAAM,IAAI,IAAI;AAClE,eAAS,KAAK,MAAM,IAAI,IAAI,CAAC;AAC7B,aAAO,WAAW,KAAK,MAAM,GAAG,UAAU;AAAA,IAC5C,WAAW,UAAU,QAAQ,KAAK,MAAM,aAAa,CAAC,CAAC,IAAI,IAAI;AAC7D,eAAS,IAAI,IAAI;AACjB,aAAO,WAAW;AAAA,IACpB,OAAO;AACL,UAAI,IAAI,OAAO,MAAM,GAAG;AACtB,cAAM,SAAS,IAAI,OAAO,MAAM,GAAG,IAAI,OAAO,MAAM,CAAC;AAAA,MACvD;AACA,eAAS,QAAQ,CAAC,SAAS,IAAI,OAAO,MAAM,GAAG,IAAI,OAAO,MAAM,CAAC,GAAG,GAAG,CAAC;AACxE,aAAO,WAAW;AAAA,IACpB;AACA,WAAO;AAAA,EACT,CAAC;AACD,MAAI,QAAQ,WAAW,GAAG;AACxB,WAAO,QAAQ,CAAC;AAAA,EAClB,OAAO;AACL,WAAO;AAAA,EACT;AACF;AACA,eAAe,OAAO,MAAM,WAAW;AACrC,QAAM,IAAI,MAAM,WAAW,IAAI;AAC/B,SAAO,SAAS,GAAG,SAAS;AAC9B;AACA,MAAM,YAAY,OAAO,SAAS;AAChC,QAAM,OAAO,MAAM,QAAQ,IAAI;AAAA,IAC7B,WAAW,MAAM,KAAK;AAAA,IACtB,WAAW,MAAM,KAAK;AAAA,EAC1B,CAAG;AACD,MAAI,MAAM;AACV,MAAI;AACF,QAAI,KAAK,CAAC,GAAG;AACX,YAAM,MAAM,KAAK,CAAC,CAAC;AAAA,IACrB;AAAA,EACF,SAAS,GAAG;AACV,UAAM;AAAA,EACR;AACA,SAAO,SAAS,KAAK,CAAC,GAAG,GAAG;AAC9B;AACA,MAAM,YAAY,OAAO,SAAS;AAChC,QAAM,CAAC,KAAK,GAAG,IAAI,MAAM,QAAQ,IAAI;AAAA,IACnC,WAAW,MAAM,KAAK;AAAA,IACtB,WAAW,MAAM,KAAK;AAAA,EAC1B,CAAG;AACD,MAAI,CAAC,KAAK;AACR;AAAA,EACF;AACA,SAAO,SAAS,KAAK,GAAG;AAC1B;AACA,MAAM,cAAc,CAAC,MAAM,WAAW;AACpC,QAAM,MAAM,IAAI,IAAI,MAAM,YAAY,UAAU,QAAQ;AACxD,SAAO,IAAI,SAAS,MAAM,EAAE,EAAE,YAAW,MAAO;AAClD;AACA,MAAM,aAAa,CAAC,EAAE,KAAK,KAAK,KAAK,IAAG,MAAO;AAC7C,QAAM,SAAS;AAAA,IACb,UAAU,KAAK,GAAG;AAAA,EACtB;AACE,MAAI,KAAK;AACP,WAAO,KAAK,UAAU,KAAK,GAAG,CAAC;AAAA,EACjC;AACA,SAAO,QAAQ,MAAM;AACvB;AACO,MAAM,eAAe,eAAgB,MAAM,WAAW;AAC3D,MAAI,OAAO,SAAS,UAAU;AAC5B,QAAI,cAAc,IAAI,KAAK,YAAY,OAAO,IAAI,KAAK,WAAW,IAAI,GAAG;AACvE,aAAO,SAAS,IAAI;AAAA,IACtB;AACA,QAAI,KAAK,KAAK;AACZ,aAAO,WAAW,IAAI;AAAA,IACxB;AACA,UAAM,IAAI,UAAU,mFAAmF;AAAA,EACzG;AACA,MAAI,YAAY,MAAM,MAAM,GAAG;AAC7B,WAAO,OAAO,MAAM,SAAS;AAAA,EAC/B;AACA,MAAI,YAAY,MAAM,MAAM,GAAG;AAC7B,WAAO,KAAK,MAAM,GAAG,EAAE;AAAA,EACzB;AACA,QAAM,UAAU,MAAM,QAAQ,IAAI;AAAA,IAChC,UAAU,IAAI;AAAA,IACd,UAAU,IAAI;AAAA,EAClB,CAAG;AACD,SAAO,QAAQ,OAAO;AACxB;AACA,MAAM,YAAY,SAAU,KAAK,KAAK;AACpC,QAAM,WAAW,GAAG;AACpB,QAAM,SAAS,GAAG;AAClB,MAAI,OAAO,QAAQ,UAAU;AAC3B,QAAI;AACF,YAAM,MAAM,GAAG;AAAA,IACjB,SAAS,GAAG;AACV,YAAM;AAAA,IACR;AAAA,EACF;AACA,SAAO,SAAS,KAAK,GAAG;AAC1B;AACA,MAAM,YAAY,SAAU,KAAK,KAAK;AACpC,QAAM,WAAW,GAAG;AACpB,QAAM,SAAS,GAAG;AAClB,SAAO,SAAS,KAAK,GAAG;AAC1B;ACxMA,MAAM,gBAAgB,KAAK,OAAO;AAElC,MAAM,gBAAgB,CAAC,mBAAmB,8BAA8B;AAIxE,SAAS,aAAa,MAAkB;AACtC,MAAI,CAAC,MAAM;AACT,UAAM,IAAI,MAAM,kBAAkB;AAAA,EACpC;AAEA,MAAI,KAAK,OAAO,eAAe;AAC7B,UAAM,IAAI,MAAM,sCAAsC,iBAAiB,OAAO,KAAK,IAAI;AAAA,EACzF;AAEA,MAAI,CAAC,cAAc,SAAS,KAAK,IAAI,GAAG;AACtC,UAAM,IAAI,MAAM,8EAA8E;AAAA,EAChG;AACF;AAEA,SAAS,mBAAmB,OAA0B;AACpD,MAAI,CAAC,MAAM,QAAQ,KAAK,KAAK,MAAM,SAAS,EAAG,QAAO;AACtD,QAAM,CAAC,KAAK,GAAG,IAAI;AACnB,SAAO,OAAO,QAAQ,YAAY,OAAO,QAAQ,YAC1C,OAAO,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAO;AAC3D;AAEA,SAAS,gBAAgB,SAAkC;AACzD,MAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,UAAM,IAAI,MAAM,gCAAgC;AAAA,EAClD;AAEA,MAAI,QAAQ,SAAS,qBAAqB;AACxC,UAAM,IAAI,MAAM,0CAA0C;AAAA,EAC5D;AAEA,MAAI,CAAC,MAAM,QAAQ,QAAQ,QAAQ,GAAG;AACpC,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC7D;AAEA,MAAI,QAAQ,SAAS,WAAW,GAAG;AACjC,UAAM,IAAI,MAAM,oCAAoC;AAAA,EACtD;AAEA,UAAQ,SAAS,QAAQ,CAAC,SAAS,UAAU;AAC3C,QAAI,CAAC,QAAQ,UAAU;AACrB,YAAM,IAAI,MAAM,4BAA4B,KAAK,eAAe;AAAA,IAClE;AAEA,QAAI,QAAQ,SAAS,SAAS,gBAAgB,QAAQ,SAAS,SAAS,mBAAmB;AACzF,YAAM,IAAI,MAAM,4BAA4B,KAAK,kDAAkD;AAAA,IACrG;AAEA,QAAI,QAAQ,SAAS,SAAS,cAAc;AAC1C,cAAQ,SAAS,YAAY,QAAQ,CAAC,OAAO,MAAM;AACjD,YAAI,CAAC,mBAAmB,KAAK,GAAG;AAC9B,gBAAM,IAAI,MAAM,+BAA+B,CAAC,eAAe,KAAK,EAAE;AAAA,QACxE;AAAA,MACF,CAAC;AAAA,IACH,OAAO;AACL,cAAQ,SAAS,YAAY,QAAQ,CAAC,MAAM,cAAc;AACxD,aAAK,QAAQ,CAAC,OAAO,MAAM;AACzB,cAAI,CAAC,mBAAmB,KAAK,GAAG;AAC9B,kBAAM,IAAI,MAAM,+BAA+B,CAAC,YAAY,SAAS,eAAe,KAAK,EAAE;AAAA,UAC7F;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACH;AAEA,eAAsB,iBAAiB,MAAqD;AAC1F,MAAI;AACF,iBAAa,IAAI;AACjB,UAAM,cAAc,MAAM,KAAK,YAAA;AAC/B,UAAM,SAAS,MAAMC,aAAI,WAAW;AACpC,UAAM,UAAU,MAAM,QAAQ,MAAM,IAAI,OAAO,CAAC,IAAI;AACpD,oBAAgB,OAAO;AACvB,UAAM,iBAAiB,aAAa,OAAO;AAC3C,WAAO,EAAE,SAAS,eAAA;AAAA,EACpB,SAAS,OAAO;AACd,YAAQ,MAAM,+BAA+B,KAAK;AAClD,UAAM,IAAI,MAAM,iBAAiB,QAAQ,MAAM,UAAU,6BAA6B;AAAA,EACxF;AACF;AAEA,SAAS,aAAa,SAA+C;AACnE,QAAM,kBAAkB,QAAQ,SAAS,IAAI,CAAA,aAAY;AAAA,IACvD,GAAG;AAAA,IACH,YAAY;AAAA,MACV,GAAI,QAAQ,cAAc,CAAA;AAAA,MAC1B,KAAK;AAAA,MACL,IAAI;AAAA,MACJ,GAAG,OAAO;AAAA,QACR,OAAO,QAAQ,QAAQ,cAAc,CAAA,CAAE,EAAE;AAAA,UAAO,CAAC,CAAC,GAAG,MACnD,CAAC,IAAI,WAAW,GAAG,KAAK,CAAC,IAAI,SAAS,UAAU,KAAK,CAAC,IAAI,SAAS,QAAQ;AAAA,QAAA;AAAA,MAC7E;AAAA,IACF;AAAA,EACF,EACA;AAEF,SAAO;AAAA,IACL,MAAM;AAAA,IACN,UAAU;AAAA,EAAA;AAEd;AClGA,SAAwB,gBAAgB;AACtC,QAAM,WAAW,YAAA;AACjB,QAAM,CAAC,SAAS,UAAU,IAAIC,aAAAA,SAAmC,IAAI;AACrE,QAAM,CAAC,SAAS,UAAU,IAAIA,aAAAA,SAAS,KAAK;AAC5C,QAAM,CAAC,OAAO,QAAQ,IAAIA,aAAAA,SAAwB,IAAI;AACtD,QAAM,CAAC,UAAU,WAAW,IAAIA,aAAAA,SAAwB,IAAI;AAC5D,QAAM,CAAC,YAAY,aAAa,IAAIA,aAAAA,SAAS,KAAK;AAElD,QAAM,oBAAoBC,yBAAY,OAAO,SAAsB;AACjE,QAAI,CAAC,KAAM;AAEX,aAAS,IAAI;AACb,eAAW,IAAI;AACf,eAAW,IAAI;AACf,gBAAY,IAAI;AAEhB,QAAI;AACF,YAAM,SAAS,MAAM,iBAAiB,IAAI;AAC1C,iBAAW,OAAO,OAAO;AACzB,kBAAY,KAAK,IAAI;AACrB,cAAQ,IAAI,mCAAmC;AAAA,IACjD,SAAS,KAAK;AACZ,YAAM,UAAU,eAAe,QAAQ,IAAI,UAAU;AACrD,eAAS,OAAO;AAChB,cAAQ,MAAM,+BAA+B,GAAG;AAAA,IAClD,UAAA;AACE,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF,GAAG,CAAA,CAAE;AAEL,QAAM,mBAAmB,CAAC,MAA2C;AACnE,sBAAkB,EAAE,OAAO,QAAQ,CAAC,KAAK,IAAI;AAC7C,MAAE,OAAO,QAAQ;AAAA,EACnB;AAEA,QAAM,aAAaA,yBAAY,CAAC,MAAuC;AACrE,MAAE,eAAA;AACF,MAAE,gBAAA;AACF,kBAAc,KAAK;AACnB,QAAI,EAAE,aAAa,SAAS,EAAE,aAAa,MAAM,SAAS,GAAG;AAC3D,wBAAkB,EAAE,aAAa,MAAM,CAAC,CAAC;AACzC,QAAE,aAAa,UAAA;AAAA,IACjB;AAAA,EACF,GAAG,CAAC,iBAAiB,CAAC;AAEtB,QAAM,iBAAiBA,yBAAY,CAAC,MAAuC;AACzE,MAAE,eAAA;AACF,MAAE,gBAAA;AACF,kBAAc,IAAI;AAAA,EACpB,GAAG,CAAA,CAAE;AAEL,QAAM,kBAAkBA,yBAAY,CAAC,MAAuC;AAC1E,MAAE,eAAA;AACF,MAAE,gBAAA;AACF,kBAAc,KAAK;AAAA,EACrB,GAAG,CAAA,CAAE;AAEL,QAAM,mBAAmB,MAAM;AAC7B,eAAW,IAAI;AACf,gBAAY,IAAI;AAChB,aAAS,IAAI;AAAA,EACf;AAEA,QAAM,iBAAiB,YAAY;AACjC,QAAI,CAAC,QAAS;AAEd,eAAW,IAAI;AACf,aAAS,IAAI;AAEb,QAAI;AACF,YAAM,cAAc;AACpB,YAAM,iBAAiB,mBAAmB,aAAa,OAAO;AAC9D,cAAQ,IAAI,qCAAqC;AACjD,eAAS,eAAe;AAAA,IAC1B,SAAS,KAAK;AACZ,YAAM,UAAU,eAAe,QAAQ,IAAI,UAAU;AACrD,eAAS,OAAO;AAChB,cAAQ,MAAM,iCAAiC,GAAG;AAClD,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF;AAEA,SACEC,kCAAAA,KAAC,OAAA,EAAI,WAAU,gDAGb,UAAA;AAAA,IAAAA,kCAAAA,KAAC,OAAA,EAAI,WAAU,qBACb,UAAA;AAAA,MAAAC,kCAAAA,IAAC,MAAA,EAAG,WAAU,2DAA0D,UAAA,4BAExE;AAAA,MACAA,kCAAAA,IAAC,KAAA,EAAE,WAAU,8BAA6B,UAAA,uEAAA,CAE1C;AAAA,IAAA,GACF;AAAA,IAGAA,sCAAC,cAAW,SAAS,OAAO,SAAS,MAAM,SAAS,IAAI,GAAG;AAAA,IAG3DD,kCAAAA,KAAC,OAAA,EAAI,WAAU,sEAEZ,UAAA;AAAA,MAAA,CAAC,YAAY,CAAC,WACbA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC,QAAQ;AAAA,UACR,YAAY;AAAA,UACZ,aAAa;AAAA,UACb,WAAW,6CACT,aAAa,qCAAqC,+BACpD;AAAA,UAEA,UAAA;AAAA,YAAAC,kCAAAA;AAAAA,cAAC;AAAA,cAAA;AAAA,gBACC,MAAK;AAAA,gBACL,IAAG;AAAA,gBACH,QAAO;AAAA,gBACP,UAAU;AAAA,gBACV,WAAU;AAAA,gBACV,UAAU;AAAA,cAAA;AAAA,YAAA;AAAA,YAEZA,kCAAAA,IAACC,cAAA,EAAgB,WAAU,kCAAA,CAAkC;AAAA,YAC7DD,kCAAAA,IAAC,QAAA,EAAK,WAAU,gDAA+C,UAAA,0CAE/D;AAAA,YACAA,kCAAAA,IAAC,QAAA,EAAK,WAAU,+BAA8B,UAAA,4BAE9C;AAAA,YACAA,kCAAAA,IAAC,QAAA,EAAK,WAAU,oCAAmC,UAAA,kEAAA,CAEnD;AAAA,UAAA;AAAA,QAAA;AAAA,MAAA;AAAA,MAIH,WACCD,kCAAAA,KAAC,OAAA,EAAI,WAAU,qBACb,UAAA;AAAA,QAAAC,kCAAAA,IAAC,OAAA,EAAI,WAAU,+EAAA,CAA+E;AAAA,QAC9FA,kCAAAA,IAAC,KAAA,EAAE,WAAU,qCAAoC,UAAA,sBAAkB;AAAA,QACnEA,kCAAAA,IAAC,KAAA,EAAE,WAAU,yBAAwB,UAAA,2CAAA,CAAwC;AAAA,MAAA,GAC/E;AAAA,MAGD,CAAC,WAAW,YAAY,WACvBD,kCAAAA,KAAC,OAAA,EAAI,WAAU,wEACZ,UAAA;AAAA,QAAAC,kCAAAA,IAACE,cAAA,EAAgB,WAAU,wCAAA,CAAwC;AAAA,QACnEF,kCAAAA,IAAC,KAAA,EAAE,WAAU,2CAA0C,UAAA,gCAA4B;AAAA,QACnFD,kCAAAA,KAAC,OAAA,EAAI,WAAU,+DACb,UAAA;AAAA,UAAAC,kCAAAA,IAACG,YAAA,EAAa,WAAU,+BAAA,CAA+B;AAAA,UACvDH,kCAAAA,IAAC,QAAA,EAAK,WAAU,qBAAqB,UAAA,SAAA,CAAS;AAAA,QAAA,GAChD;AAAA,QACAD,kCAAAA;AAAAA,UAAC;AAAA,UAAA;AAAA,YACC,SAAS;AAAA,YACT,WAAU;AAAA,YAET,UAAA;AAAA,cAAAC,kCAAAA,IAACI,cAAA,EAAY,WAAU,+BAAA,CAA+B;AAAA,cAAE;AAAA,YAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MAE1D,EAAA,CACJ;AAAA,IAAA,GAMJ;AAAA,IAGC,WAAW,CAAC,WACXL,kCAAAA,KAAC,OAAA,EAAI,WAAU,QACb,UAAA;AAAA,MAAAC,kCAAAA,IAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,qBAAiB;AAAA,MAC1EA,kCAAAA,IAAC,OAAA,EAAI,WAAU,mFACb,UAAAA,kCAAAA;AAAAA,QAAC;AAAA,QAAA;AAAA,UACC;AAAA,UACA,UAAU,CAAA;AAAA,UACV,YAAY,CAAA;AAAA,UACZ,mBAAmB;AAAA,UACnB,kBAAkB,CAAA;AAAA,UAClB,mBAAmB,CAAA;AAAA,UACnB,iBAAiB,MAAM;AAAA,UAAC;AAAA,UACxB,mBAAmB,MAAM;AAAA,UAAC;AAAA,UAC1B,cAAc,MAAM;AAAA,UAAC;AAAA,UACrB,WAAW;AAAA,QAAA;AAAA,MAAA,EACb,CACF;AAAA,IAAA,GACF;AAAA,IAIFA,kCAAAA,IAAC,OAAA,EAAI,WAAU,eACb,UAAAA,kCAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QACC,SAAS;AAAA,QACT,UAAU,WAAW,CAAC;AAAA,QACtB,WAAU;AAAA,QACV,OAAO,CAAC,UAAU,6BAA6B;AAAA,QAE9C,qBAAW,CAAC,UAAU,kBAAmB,WAAW,UAAU,cAAc;AAAA,MAAA;AAAA,IAAA,EAC/E,CACF;AAAA,EAAA,GAEF;AAEJ;","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}