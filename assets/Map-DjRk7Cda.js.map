{"version":3,"file":"Map-DjRk7Cda.js","sources":["../../src/utils/vulnerabilityMapping.ts","../../src/components/maps/Map.tsx"],"sourcesContent":["// src/utils/vulnerabilityMapping.ts\n\n// ICVI result classification ranges\nconst ICVI_ARITHMETIC_RANGES = [\n  { min: 0, max: 0.2, label: 'Very Low', rank: 1 },\n  { min: 0.2, max: 0.4, label: 'Low', rank: 2 },\n  { min: 0.4, max: 0.6, label: 'Moderate', rank: 3 },\n  { min: 0.6, max: 0.8, label: 'High', rank: 4 },\n  { min: 0.8, max: 1.0, label: 'Very High', rank: 5 }\n];\n\nconst ICVI_GEOMETRIC_RANGES = [\n  { min: 0.1, max: 0.26, label: 'Very Low', rank: 1 },\n  { min: 0.26, max: 0.42, label: 'Low', rank: 2 },\n  { min: 0.42, max: 0.58, label: 'Moderate', rank: 3 },\n  { min: 0.58, max: 0.74, label: 'High', rank: 4 },\n  { min: 0.74, max: 0.9, label: 'Very High', rank: 5 } // Corrected for 0.1-0.9 scale used in ICVI geometric mean\n];\n\nexport const getCviCategory = (score: number | undefined | null, formula?: string): string => {\n  if (score === undefined || score === null || isNaN(score)) return 'No Data';\n\n  // For ICVI, the score is now a raw value (0-1) that needs classification\n  if (formula === 'icvi-arithmetic') {\n    // Use arithmetic mean classification ranges\n    const range = ICVI_ARITHMETIC_RANGES.find(r => score >= r.min && (score < r.max || (r.max === 1.0 && score <= r.max)));\n    return range ? range.label : 'No Data';\n  }\n\n  if (formula === 'icvi-geometric') {\n    // Use geometric mean classification ranges (corrected for 0.1-0.9 scale)\n    const range = ICVI_GEOMETRIC_RANGES.find(r => score >= r.min && (score < r.max || (r.max === 0.9 && score <= r.max)));\n    return range ? range.label : 'No Data';\n  }\n\n  // For traditional CVI (1-5 scale)\n  const rank = Math.round(score);\n  if (rank <= 1) return 'Very Low';\n  if (rank === 2) return 'Low';\n  if (rank === 3) return 'Moderate';\n  if (rank === 4) return 'High';\n  if (rank >= 5) return 'Very High';\n  return 'No Data';\n};\n\nexport const getCviRank = (score: number | undefined | null, formula?: string): number => {\n  if (score === undefined || score === null || isNaN(score)) return 0;\n\n  // For ICVI, the score is now a raw value (0-1) that needs classification\n  if (formula === 'icvi-arithmetic') {\n    // Use arithmetic mean classification ranges\n    const range = ICVI_ARITHMETIC_RANGES.find(r => score >= r.min && (score < r.max || (r.max === 1.0 && score <= r.max)));\n    return range ? range.rank : 0;\n  }\n\n  if (formula === 'icvi-geometric') {\n    // Use geometric mean classification ranges (corrected for 0.1-0.9 scale)\n    const range = ICVI_GEOMETRIC_RANGES.find(r => score >= r.min && (score < r.max || (r.max === 0.9 && score <= r.max)));\n    return range ? range.rank : 0;\n  }\n\n  // For traditional CVI (1-5 scale)\n  return Math.round(score);\n};\n","// ---- File: src/components/maps/Map.tsx ----\nimport React, { useEffect, useRef, useCallback, useState } from 'react'\nimport L from 'leaflet'\nimport 'leaflet-draw'\nimport 'leaflet/dist/leaflet.css'\nimport 'leaflet-draw/dist/leaflet.draw.css'\nimport type { Parameter, ShorelineSegment, SelectionPolygon } from '../../types'\nimport type { FeatureCollection, Polygon as GeoJSONPolygon, Feature, GeoJsonObject } from 'geojson'\nimport * as turf from '@turf/turf'\nimport { getCviRank } from '../../utils/vulnerabilityMapping'\n\ninterface MapProps {\n  segments: ShorelineSegment[]\n  parameters: Parameter[]\n  selectedSegments: string[]\n  selectedParameter: string | null\n  selectionPolygons: SelectionPolygon[]\n  onSegmentSelect: (segmentId: string) => void\n  onSelectionDelete: (polygonId: string) => void\n  onAreaSelect: (geometry: GeoJSONPolygon) => void\n  isEditing: boolean\n  initialBounds?: L.LatLngBoundsExpression | null\n  geoJSON?: FeatureCollection | null\n  zoomToFeatureId?: string | null\n  stylingMode?: 'parameter' | 'cvi'\n}\n\nconst getCviColor = (score: number | undefined | null, formula?: string): string => {\n  if (score === undefined || score === null || isNaN(score)) return '#808080';\n\n  const rank = getCviRank(score, formula);\n  if (rank <= 1) return '#1a9850';\n  if (rank === 2) return '#91cf60';\n  if (rank === 3) return '#fee08b';\n  if (rank === 4) return '#fc8d59';\n  if (rank >= 5) return '#d73027';\n  return '#808080';\n};\n\nfunction getFeatureStyle(\n  feature: Feature,\n  segments: ShorelineSegment[],\n  parameters: Parameter[],\n  selectedSegments: string[],\n  selectedParameterId: string | null,\n  stylingMode: 'parameter' | 'cvi' = 'parameter'\n): L.PathOptions {\n\n  const segmentId = feature.properties?.id;\n  const isSelected = segmentId ? selectedSegments.includes(segmentId) : false;\n  const cviScore = feature.properties?.vulnerabilityIndex;\n\n  if (stylingMode === 'cvi') {\n    const formula = feature.properties?.vulnerabilityFormula;\n    const color = getCviColor(cviScore, formula);\n    return {\n      color: isSelected ? '#0ea5e9' : color,\n      weight: isSelected ? 5 : 3,\n      opacity: isSelected ? 1 : 0.8,\n      fillOpacity: isSelected ? 0.4 : 0.2,\n    };\n  }\n\n\n  const segmentData = segmentId ? segments.find(s => s.id === segmentId) : null;\n  const parameter = selectedParameterId ? parameters.find(p => p.id === selectedParameterId) : null;\n\n  if (!selectedParameterId || !parameter || !segmentData?.parameters) {\n    return {\n      color: isSelected ? '#FF4500' : '#3388ff',\n      weight: isSelected ? 5 : 3,\n      opacity: 1,\n    };\n  }\n\n  const paramValue = segmentData.parameters[selectedParameterId];\n\n  if (!paramValue) {\n    return {\n      color: isSelected ? '#FF4500' : '#808080',\n      weight: isSelected ? 5 : 2,\n      opacity: isSelected ? 1 : 0.6,\n      dashArray: '5,5',\n    };\n  }\n\n  let valueColor = '#3388ff';\n  const vulnerabilityScore = paramValue.vulnerability;\n\n  if (parameter.type === 'categorical' && parameter.options) {\n    const option = parameter.options.find(o => o.value === paramValue.value);\n    valueColor = option?.color || getCviColor(vulnerabilityScore, feature.properties?.vulnerabilityFormula);\n  } else if (parameter.type === 'numerical' && parameter.vulnerabilityRanges) {\n    const range = parameter.vulnerabilityRanges.find(r => r.value === vulnerabilityScore);\n    valueColor = range?.color || '#808080';\n  }\n\n  return {\n    color: isSelected ? '#FF4500' : valueColor,\n    weight: isSelected ? 5 : 3,\n    opacity: 1,\n };\n}\n\n\nconst Map: React.FC<MapProps> = ({\n  segments,\n  parameters,\n  selectedSegments,\n  selectedParameter,\n  onSegmentSelect,\n  onSelectionDelete,\n  onAreaSelect,\n  isEditing,\n  initialBounds,\n  geoJSON,\n  zoomToFeatureId,\n  stylingMode = 'parameter'\n}) => {\n  const mapRef = useRef<L.Map | null>(null)\n  const drawControlRef = useRef<L.Control.Draw | null>(null)\n  const segmentsLayerRef = useRef<L.GeoJSON | null>(null)\n  const drawnItemsRef = useRef<L.FeatureGroup | null>(null)\n  const [isMapInitialized, setIsMapInitialized] = useState(false)\n  const handleSegmentClick = useCallback((feature: Feature, layer: L.Layer) => {\n    if (feature.properties && feature.properties.id) {\n      const segmentId = feature.properties.id\n      console.log('Map: Segment clicked:', segmentId)\n      onSegmentSelect(segmentId)\n\n       if (mapRef.current && layer instanceof L.Path) {\n           const props = feature.properties || {} as any;\n           let popupContent = `<b>Segment ID:</b> ${props.id}`;\n           if (props.cviScore !== undefined) {\n               popupContent += `<br/><b>CVI Score:</b> ${props.cviScore.toFixed(2)}`;\n               popupContent += `<br/><b>Category:</b> ${props.cviCategory}`;\n           }\n           if (props.length !== undefined) {\n               popupContent += `<br/><b>Length:</b> ${props.length.toFixed(2)}m`;\n           }\n           layer.bindPopup(popupContent).openPopup();\n       }\n\n    }\n  }, [onSegmentSelect])\n\n  useEffect(() => {\n    console.log('Map Effect 1: Initializing map instance...')\n    if (mapRef.current || typeof window === 'undefined') return\n\n    const mapContainer = document.getElementById('map')\n    if (!mapContainer) {\n      console.error(\"Map container 'map' not found\")\n      return\n    }\n\n    if ((mapContainer as any)._leaflet_id) {\n      console.warn(\"Map container already had a Leaflet ID. Clearing it.\");\n      (mapContainer as any)._leaflet_id = null;\n    }\n\n    try {\n      const mapInstance = L.map('map', {\n        center: [20, 0],\n        zoom: 2,\n        zoomControl: true,\n      })\n      mapRef.current = mapInstance\n\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: 'Â© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstance)\n\n      const drawnItemsInstance = new L.FeatureGroup()\n      mapInstance.addLayer(drawnItemsInstance)\n      drawnItemsRef.current = drawnItemsInstance\n\n      setIsMapInitialized(true)\n      console.log('Map Effect 1: Map instance created.');\n\n    } catch (error) {\n       console.error(\"Map Effect 1: Error initializing map:\", error);\n    }\n\n    return () => {\n      console.log('Map Effect 1: Cleaning up map instance.')\n      if (mapRef.current) {\n        mapRef.current.remove()\n        mapRef.current = null\n      }\n      drawnItemsRef.current = null;\n      segmentsLayerRef.current = null;\n      setIsMapInitialized(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    const mapInstance = mapRef.current\n    if (!mapInstance || !isMapInitialized) {\n       console.log('Map Effect 2: Skipping data layer update (map not ready).');\n       return;\n    }\n\n    if (segmentsLayerRef.current) {\n      mapInstance.removeLayer(segmentsLayerRef.current)\n      segmentsLayerRef.current = null\n      console.log(\"Map Effect 2: Removed existing segments layer.\")\n    }\n\n    if (geoJSON && geoJSON.features && geoJSON.features.length > 0) {\n      console.log(`Map Effect 2: Creating GeoJSON layer with ${geoJSON.features.length} features (Styling: ${stylingMode}).`);\n\n      const segmentsLayer = L.geoJSON(geoJSON as GeoJsonObject, {\n        style: (feature?: Feature) => {\n          if (!feature) return { color: '#808080', weight: 1 };\n          return getFeatureStyle(\n              feature,\n              segments,\n              parameters,\n              selectedSegments,\n              selectedParameter,\n              stylingMode\n          );\n        },\n        onEachFeature: (feature, layer) => {\n          layer.on({\n            mouseover: (e) => {\n               const targetLayer = e.target;\n               const segmentId = feature.properties?.id;\n               if (segmentId && !selectedSegments.includes(segmentId)) {\n                 if (targetLayer instanceof L.Path) {\n                   targetLayer.setStyle({ weight: 5 });\n                   targetLayer.bringToFront();\n                 }\n               }\n             },\n             mouseout: (e) => {\n               const targetLayer = e.target;\n               const segmentId = feature.properties?.id;\n               if (segmentId && !selectedSegments.includes(segmentId)) {\n                 if (segmentsLayerRef.current && targetLayer instanceof L.Path) {\n                   segmentsLayerRef.current.resetStyle(targetLayer);\n                 }\n               }\n             },\n             click: () => handleSegmentClick(feature, layer)\n          });\n\n           const props = feature.properties || {};\n           let tooltipContent = `ID: ${props.id}`;\n           if (props.cviScore !== undefined) tooltipContent += ` | CVI: ${props.cviScore.toFixed(2)}`;\n           layer.bindTooltip(tooltipContent, { sticky: true });\n\n        }\n      }).addTo(mapInstance);\n\n      segmentsLayerRef.current = segmentsLayer;\n      console.log(\"Map Effect 2: Added new segments layer.\");\n    } else {\n      console.log(\"Map Effect 2: No features in geoJSON to display.\");\n    }\n  }, [geoJSON, segments, parameters, selectedSegments, selectedParameter, stylingMode, handleSegmentClick, isMapInitialized]);\n\n  useEffect(() => {\n    const mapInstance = mapRef.current;\n    if (!mapInstance || !isMapInitialized) {\n      console.log(\"Map Effect 3: Skipping bounds fitting (map not ready).\");\n      return;\n    }\n\n    if (zoomToFeatureId && segmentsLayerRef.current) {\n       console.log(\"Map Effect 3: Skipping general bounds fitting because zoomToFeatureId is active.\");\n       return;\n    }\n\n    let targetBounds: L.LatLngBounds | null = null;\n\n    if (initialBounds) {\n      try {\n        const bounds = initialBounds instanceof L.LatLngBounds\n          ? initialBounds\n          : L.latLngBounds(initialBounds as L.LatLngExpression[]);\n\n        if (bounds.isValid()) {\n          targetBounds = bounds;\n          console.log(\"Map Effect 3: Using provided initialBounds\", targetBounds.toBBoxString());\n        } else {\n           console.warn(\"Map Effect 3: Provided initialBounds are invalid.\");\n        }\n      } catch (e) {\n         console.error(\"Map Effect 3: Error processing provided initialBounds:\", e);\n      }\n    }\n\n    if (!targetBounds && geoJSON && geoJSON.features && geoJSON.features.length > 0) {\n       console.log(\"Map Effect 3: Calculating bounds from geoJSON data.\");\n       try {\n         const validFeatures = geoJSON.features.filter(f => f && f.geometry);\n         if (validFeatures.length > 0) {\n           const featureCollection = turf.featureCollection(validFeatures as any);\n           const bbox = turf.bbox(featureCollection);\n            if (bbox && bbox.length === 4 && bbox.every((b: number) => isFinite(b)) && bbox[0] <= bbox[2] && bbox[1] <= bbox[3]) {\n                targetBounds = L.latLngBounds([\n                  [bbox[1], bbox[0]],\n                  [bbox[3], bbox[2]]\n                ]);\n                console.log(\"Map Effect 3: Calculated bounds from geoJSON\", targetBounds.toBBoxString());\n            } else {\n                console.warn(\"Map Effect 3: Calculated bbox is invalid.\", bbox);\n            }\n         } else {\n            console.log(\"Map Effect 3: No valid features found in geoJSON for bounds calculation.\");\n         }\n       } catch (e) {\n         console.error(\"Map Effect 3: Error calculating bounds from geoJSON:\", e);\n       }\n    }\n\n    if (targetBounds && targetBounds.isValid()) {\n      console.log(\"Map Effect 3: Fitting map to bounds:\", targetBounds.toBBoxString());\n      setTimeout(() => {\n         mapInstance.fitBounds(targetBounds, { padding: [50, 50], maxZoom: 18 });\n      }, 100); // Small delay\n    } else if (!initialBounds) {\n      console.warn(\"Map Effect 3: No valid bounds found to fit. Resetting to default view.\");\n      mapInstance.setView([20, 0], 2);\n    }\n  }, [geoJSON, initialBounds, isMapInitialized, zoomToFeatureId]);\n\n   useEffect(() => {\n    const mapInstance = mapRef.current;\n    const segmentsLayer = segmentsLayerRef.current;\n    if (!mapInstance || !segmentsLayer || !zoomToFeatureId || !isMapInitialized) {\n      return;\n    }\n\n    console.log(`Map Effect 4: Attempting to zoom to feature ID: ${zoomToFeatureId}`);\n    let foundLayer: L.Layer | null = null;\n\n    segmentsLayer.eachLayer((layer: L.Layer) => {\n      const feature = (layer as any).feature as Feature | undefined;\n      if (feature?.properties?.id === zoomToFeatureId) {\n        foundLayer = layer;\n      }\n    });\n\n    if (foundLayer && typeof (foundLayer as L.GeoJSON).getBounds === 'function') {\n       const bounds = (foundLayer as L.GeoJSON).getBounds();\n       if (bounds.isValid()) {\n         console.log(`Map Effect 4: Found feature ${zoomToFeatureId}, flying to bounds:`, bounds.toBBoxString());\n         mapInstance.flyToBounds(bounds, { padding: [100, 100], maxZoom: 18, duration: 1 }); // Adjusted padding and duration\n       } else {\n          console.warn(`Map Effect 4: Feature ${zoomToFeatureId} found, but its bounds are invalid.`);\n       }\n    } else {\n       console.warn(`Map Effect 4: Feature with ID ${zoomToFeatureId} not found in the segments layer or has no bounds.`);\n    }\n  }, [zoomToFeatureId, isMapInitialized]);\n\n  useEffect(() => {\n    const mapInstance = mapRef.current\n    const drawnItemsInstance = drawnItemsRef.current\n\n    if (!mapInstance || !drawnItemsInstance || !isMapInitialized) {\n      console.log('Map Effect 5: Skipping draw control setup (map not ready).')\n      return\n    }\n\n    console.log(`Map Effect 5: Setting up draw controls (isEditing: ${isEditing}).`)\n\n    if (drawControlRef.current) {\n      console.log(\"Map Effect 5: Removing previous draw control.\")\n      try { mapInstance.removeControl(drawControlRef.current); } catch(e) { console.warn(\"Minor error removing old draw control\", e); }\n      drawControlRef.current = null;\n    }\n    mapInstance.off(L.Draw.Event.CREATED);\n    mapInstance.off(L.Draw.Event.DELETED);\n    mapInstance.off(L.Draw.Event.DRAWSTART);\n    mapInstance.off(L.Draw.Event.DRAWSTOP);\n\n    if (isEditing) {\n      console.log(\"Map Effect 5: Adding Leaflet Draw controls.\");\n\n      const drawControlInstance = new L.Control.Draw({\n        draw: {\n          polyline: false,\n          rectangle: false,\n          circle: false,\n          circlemarker: false,\n          marker: false,\n          polygon: {\n            allowIntersection: false,\n            showArea: false,\n            shapeOptions: { color: '#007bff', weight: 2, opacity: 0.7, fillOpacity: 0.1 },\n          }\n        },\n        edit: {\n          featureGroup: drawnItemsInstance,\n          remove: true\n        }\n      });\n\n      mapInstance.addControl(drawControlInstance);\n      drawControlRef.current = drawControlInstance;\n\n      mapInstance.on(L.Draw.Event.DRAWSTART, (e: any) => {\n        console.log(`Draw Event: START (${e.layerType})`);\n        drawnItemsInstance.clearLayers();\n      });\n\n       mapInstance.on(L.Draw.Event.CREATED, (e: any) => {\n         const layer = e.layer as L.Path;\n         const type = e.layerType;\n         console.log(`Draw Event: CREATED (${type})`);\n\n         if (type === 'polygon') {\n           try {\n             const layerWithGeoJSON = layer as any;\n             if (typeof layerWithGeoJSON.toGeoJSON === 'function') {\n               const feature = layerWithGeoJSON.toGeoJSON();\n               if (feature.geometry && feature.geometry.type === 'Polygon') {\n                 const geoJsonGeom = feature.geometry as GeoJSONPolygon;\n                 console.log(\"Map: Passing geometry to onAreaSelect:\", JSON.stringify(geoJsonGeom));\n                 onAreaSelect(geoJsonGeom);\n                 setTimeout(() => {\n                    try {\n                        if (mapInstance.hasLayer(layer)) {\n                            mapInstance.removeLayer(layer);\n                            console.log(\"Map: Removed temporary drawing layer after CREATED event.\");\n                        }\n                    } catch (removeError) {\n                        console.warn(\"Map: Error removing temporary drawing layer:\", removeError);\n                    }\n                 }, 0);\n\n\n               } else {\n                 console.error(\"Map: Created layer is not a valid Polygon GeoJSON\", feature);\n               }\n             } else {\n                console.error(\"Map: Created layer does not have toGeoJSON method.\");\n             }\n           } catch (error) {\n             console.error(\"Map: Error processing created geometry:\", error);\n           }\n         } else {\n            setTimeout(() => mapInstance.removeLayer(layer), 0);\n         }\n       });\n\n\n      mapInstance.on(L.Draw.Event.DELETED, () => {\n        console.log(\"Draw Event: DELETED (Selection shape removed by user)\");\n      });\n\n      mapInstance.on(L.Draw.Event.DRAWSTOP, () => {\n         console.log(`Draw Event: STOP`);\n      });\n\n    } else {\n      console.log(\"Map Effect 5: Editing disabled, draw controls not added.\")\n    }\n\n    return () => {\n      console.log(\"Map Effect 5: Cleaning up draw controls and listeners.\");\n      if (mapRef.current && drawControlRef.current) {\n        try { mapRef.current.removeControl(drawControlRef.current); } catch (e) { console.warn(\"Minor error removing draw control on effect cleanup\", e); }\n        drawControlRef.current = null;\n      }\n      if (mapRef.current) {\n        mapRef.current.off(L.Draw.Event.CREATED);\n        mapRef.current.off(L.Draw.Event.DELETED);\n        mapRef.current.off(L.Draw.Event.DRAWSTART);\n        mapRef.current.off(L.Draw.Event.DRAWSTOP);\n      }\n    }\n  }, [isEditing, onAreaSelect, onSelectionDelete, isMapInitialized]);\n\n  return <div id=\"map\" style={{ height: '100%', width: '100%', minHeight: '400px' }}></div>\n}\nMap.displayName = 'MapComponent';\nexport default Map\n"],"names":["useRef","useState","useCallback","useEffect","featureCollection","turf.featureCollection","bbox","turf.bbox","jsx"],"mappings":"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"}