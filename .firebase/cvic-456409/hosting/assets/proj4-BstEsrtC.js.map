{"version":3,"file":"proj4-BstEsrtC.js","sources":["../../node_modules/proj4/lib/constants/values.js","../../node_modules/proj4/lib/constants/PrimeMeridian.js","../../node_modules/proj4/lib/constants/units.js","../../node_modules/proj4/lib/match.js","../../node_modules/proj4/lib/projString.js","../../node_modules/wkt-parser/parser.js","../../node_modules/wkt-parser/process.js","../../node_modules/wkt-parser/index.js","../../node_modules/proj4/lib/defs.js","../../node_modules/proj4/lib/global.js","../../node_modules/proj4/lib/parseCode.js","../../node_modules/proj4/lib/extend.js","../../node_modules/proj4/lib/common/msfnz.js","../../node_modules/proj4/lib/common/sign.js","../../node_modules/proj4/lib/common/adjust_lon.js","../../node_modules/proj4/lib/common/tsfnz.js","../../node_modules/proj4/lib/common/phi2z.js","../../node_modules/proj4/lib/projections/longlat.js","../../node_modules/proj4/lib/projections.js","../../node_modules/proj4/lib/projections/merc.js","../../node_modules/proj4/lib/constants/Ellipsoid.js","../../node_modules/proj4/lib/constants/Datum.js","../../node_modules/proj4/lib/nadgrid.js","../../node_modules/proj4/lib/Proj.js","../../node_modules/proj4/lib/deriveConstants.js","../../node_modules/proj4/lib/datum.js","../../node_modules/proj4/lib/datumUtils.js","../../node_modules/proj4/lib/datum_transform.js","../../node_modules/proj4/lib/adjust_axis.js","../../node_modules/proj4/lib/common/toPoint.js","../../node_modules/proj4/lib/checkSanity.js","../../node_modules/proj4/lib/transform.js","../../node_modules/proj4/lib/core.js","../../node_modules/mgrs/mgrs.js","../../node_modules/proj4/lib/Point.js","../../node_modules/proj4/lib/common/pj_enfn.js","../../node_modules/proj4/lib/common/pj_mlfn.js","../../node_modules/proj4/lib/common/pj_inv_mlfn.js","../../node_modules/proj4/lib/projections/tmerc.js","../../node_modules/proj4/lib/common/sinh.js","../../node_modules/proj4/lib/common/hypot.js","../../node_modules/proj4/lib/common/asinhy.js","../../node_modules/proj4/lib/common/log1py.js","../../node_modules/proj4/lib/common/gatg.js","../../node_modules/proj4/lib/common/clens_cmplx.js","../../node_modules/proj4/lib/common/cosh.js","../../node_modules/proj4/lib/projections/etmerc.js","../../node_modules/proj4/lib/common/clens.js","../../node_modules/proj4/lib/projections/utm.js","../../node_modules/proj4/lib/common/adjust_zone.js","../../node_modules/proj4/lib/common/srat.js","../../node_modules/proj4/lib/projections/gauss.js","../../node_modules/proj4/lib/projections/sterea.js","../../node_modules/proj4/lib/projections/stere.js","../../node_modules/proj4/lib/projections/somerc.js","../../node_modules/proj4/lib/projections/omerc.js","../../node_modules/proj4/lib/projections/lcc.js","../../node_modules/proj4/lib/projections/krovak.js","../../node_modules/proj4/lib/common/mlfn.js","../../node_modules/proj4/lib/common/e0fn.js","../../node_modules/proj4/lib/common/e1fn.js","../../node_modules/proj4/lib/common/e2fn.js","../../node_modules/proj4/lib/common/e3fn.js","../../node_modules/proj4/lib/common/gN.js","../../node_modules/proj4/lib/common/adjust_lat.js","../../node_modules/proj4/lib/common/imlfn.js","../../node_modules/proj4/lib/projections/cass.js","../../node_modules/proj4/lib/common/qsfnz.js","../../node_modules/proj4/lib/projections/laea.js","../../node_modules/proj4/lib/common/asinz.js","../../node_modules/proj4/lib/projections/aea.js","../../node_modules/proj4/lib/projections/gnom.js","../../node_modules/proj4/lib/projections/cea.js","../../node_modules/proj4/lib/common/iqsfnz.js","../../node_modules/proj4/lib/projections/eqc.js","../../node_modules/proj4/lib/projections/poly.js","../../node_modules/proj4/lib/projections/nzmg.js","../../node_modules/proj4/lib/projections/mill.js","../../node_modules/proj4/lib/projections/sinu.js","../../node_modules/proj4/lib/projections/moll.js","../../node_modules/proj4/lib/projections/eqdc.js","../../node_modules/proj4/lib/projections/vandg.js","../../node_modules/proj4/lib/projections/aeqd.js","../../node_modules/proj4/lib/projections/ortho.js","../../node_modules/proj4/lib/projections/qsc.js","../../node_modules/proj4/lib/projections/robin.js","../../node_modules/proj4/lib/projections/geocent.js","../../node_modules/proj4/lib/projections/tpers.js","../../node_modules/proj4/lib/projections/geos.js","../../node_modules/proj4/lib/projections/eqearth.js","../../node_modules/proj4/lib/projections/bonne.js","../../node_modules/proj4/projs.js","../../node_modules/proj4/lib/index.js"],"sourcesContent":["export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  'mm': {to_meter: 0.001},\n  'cm': {to_meter: 0.01},\n  'ft': {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937},\n  'fath': {to_meter: 1.8288},\n  'kmi': {to_meter: 1852},\n  'us-ch': {to_meter: 20.1168402336805},\n  'us-mi': {to_meter: 1609.34721869444},\n  'km': {to_meter: 1000},\n  'ind-ft': {to_meter: 0.30479841},\n  'ind-yd': {to_meter: 0.91439523},\n  'mi': {to_meter: 1609.344},\n  'yd': {to_meter: 0.9144},\n  'ch': {to_meter: 20.1168},\n  'link': {to_meter: 0.201168},\n  'dm': {to_meter: 0.01},\n  'in': {to_meter: 0.0254},\n  'ind-ch': {to_meter: 20.11669506},\n  'us-in': {to_meter: 0.025400050800101},\n  'us-yd': {to_meter: 0.914401828803658}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r: function(v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), \"+proj=utm +zone=\" + i + \" +datum=WGS84 +units=m\");\n    defs('EPSG:' + (32700 + i), \"+proj=utm +zone=\" + i + \" +south +datum=WGS84 +units=m\");\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var datums = {\n  wgs84: {\n    towgs84: \"0,0,0\",\n    ellipse: \"WGS84\",\n    datumName: \"WGS84\"\n  },\n  ch1903: {\n    towgs84: \"674.374,15.056,405.346\",\n    ellipse: \"bessel\",\n    datumName: \"swiss\"\n  },\n  ggrs87: {\n    towgs84: \"-199.87,74.79,246.62\",\n    ellipse: \"GRS80\",\n    datumName: \"Greek_Geodetic_Reference_System_1987\"\n  },\n  nad83: {\n    towgs84: \"0,0,0\",\n    ellipse: \"GRS80\",\n    datumName: \"North_American_Datum_1983\"\n  },\n  nad27: {\n    nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n    ellipse: \"clrk66\",\n    datumName: \"North_American_Datum_1927\"\n  },\n  potsdam: {\n    towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n    ellipse: \"bessel\",\n    datumName: \"Potsdam Rauenberg 1950 DHDN\"\n  },\n  carthage: {\n    towgs84: \"-263.0,6.0,431.0\",\n    ellipse: \"clark80\",\n    datumName: \"Carthage 1934 Tunisia\"\n  },\n  hermannskogel: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Hermannskogel\"\n  },\n  mgi: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Militar-Geographische Institut\",\n  },\n  osni52: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"airy\",\n    datumName: \"Irish National\"\n  },\n  ire65: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"mod_airy\",\n    datumName: \"Ireland 1965\"\n  },\n  rassadiran: {\n    towgs84: \"-133.63,-157.5,-158.62\",\n    ellipse: \"intl\",\n    datumName: \"Rassadiran\"\n  },\n  nzgd49: {\n    towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n    ellipse: \"intl\",\n    datumName: \"New Zealand Geodetic Datum 1949\"\n  },\n  osgb36: {\n    towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n    ellipse: \"airy\",\n    datumName: \"Ordnance Survey of Great Britain 1936\"\n  },\n  s_jtsk: {\n    towgs84: \"589,76,480\",\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n    ellipse: \"intl\",\n    datumName: \"Reseau National Belge 1972\"\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.slice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from \"../common/adjust_lon\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n  paramLatSq = paramLat * paramLat,\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat) /\n  (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n      NITER = 12,\n      paramLat = p.y,\n      paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n        break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)) /\n          Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"eqearth\", \"Equal Earth\", \"Equal_Earth\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lat from \"../common/adjust_lat\";\nimport adjust_lon from \"../common/adjust_lon\";\nimport hypot from \"../common/hypot\";\nimport pj_enfn from \"../common/pj_enfn\";\nimport pj_inv_mlfn from \"../common/pj_inv_mlfn\";\nimport pj_mlfn from \"../common/pj_mlfn\";\nimport { HALF_PI } from \"../constants/values\";\n\nvar EPS10 = 1e-10;\n\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    }\n    else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  }\n  else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = [\"bonne\", \"Bonne (Werner lat_1=90)\"];\nexport default {\n  init: init,\n  names: names\n};","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n"],"names":["SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","units","mm","to_meter","cm","ft","fath","kmi","km","mi","yd","ch","link","dm","in","ignoredChar","match","obj","key","testkey","keys","Object","lkey","toLowerCase","replace","i","length","projStr","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","whitespace","latin","keyword","endThings","digets","Parser","text","Error","this","level","place","root","stack","currentObject","state","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","type","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","output","knownTypes","d2r","input","cleanWKT","wkt","ii","setPropertiesFromWkt","AUTHORITY","authority","title","projName","local","PROJECTION","AXIS","axisOrder","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","slice","sphere","ellps","TOWGS84","isFinite","forEach","outName","inName","lisp","defs","that","arguments","def","charAt","parseProj","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","globals","codeWords","codes","parse","code","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","extend","destination","source","property","msfnz","eccent","sinphi","cosphi","con","sqrt","sign","x","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","e","cos","forward","y","lon","lat","inverse","exp","names","projStore","add","len","n","names$v","projections","start","get","ellipseName","datums","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","mgi","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","String","fromCharCode","Uint8Array","buffer","mapNodes","nodes","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","datumDef","Datum","a2","b2","sphere_","Ellipsoid","dc_sphere","ecc","ep2","getNadgrids","datumObj","datum_type","grids","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","checkParams","datum_transform","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","Number","NaN","attemptedGrids","outer","subgrids","j","jj","subgrid","epsilon","del","minX","ll","minY","maxX","lim","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","inx","indx","floor","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","adjust_axis","crs","denorm","xin","yin","zin","common","array","m","checkCoord","num","TypeError","transform","enforceAxis","hasZ","toPoint","checkSanity","checkNotWGS","transformer","from","to","coords","transformedArray","concat","checkProj","oProj","proj4","fromProj","toProj","coord","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","encode","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","round","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","s","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","g","temp","h","asin","sinh","hypot","max","min","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens_cmplx","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hr","hi1","hr1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","tmp","adjust_zone","dependsOn","srat","esinp","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","omerc","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","krovak","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","tl","asq","cl","dd","nl1","rl1","tl1","dl","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","cea","iqsfnz","eqc","dlat","poly","el","bl","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu","C_y","C_x","moll","delta_theta","eqdc","ml1","ml2","vandg","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","ortho","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","robin","f_df","max_err","iters","upd","newton_rapshon","poly3_der","geocent","azi","degrees","tilt","tpers","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","geos","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","A1","A2","A3","A4","eqearth","paramLat","paramLatSq","paramLatPow6","EPS10","e_fwd","am1","e_inv","s_fwd","cphi1","s_inv","bonne","defaultDatum","Proj","nadgrid","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","version"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92]}